"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MFrac = void 0;
var errors_1 = require("../../../errors");
var helpers_1 = require("../../../helpers");
var MFrac = /** @class */ (function () {
    function MFrac(mathElement) {
        this._mathmlElement = mathElement;
    }
    MFrac.prototype.convert = function () {
        var _a = this._mathmlElement, children = _a.children, name = _a.name;
        var childrenLength = children.length;
        if (childrenLength !== 2)
            throw new errors_1.InvalidNumberOfChildrenError(name, 2, childrenLength);
        var num = helpers_1.mathMLElementToLaTeXConverter(children[0]).convert();
        var den = helpers_1.mathMLElementToLaTeXConverter(children[1]).convert();
        if (this._isBevelled())
            return this._wrapIfMoreThanOneChar(num) + "/" + this._wrapIfMoreThanOneChar(den);
        return "\\frac{" + num + "}{" + den + "}";
    };
    MFrac.prototype._wrapIfMoreThanOneChar = function (str) {
        return new helpers_1.ParenthesisWrapper().wrapIfMoreThanOneChar(str);
    };
    MFrac.prototype._isBevelled = function () {
        return !!this._mathmlElement.attributes.bevelled;
    };
    return MFrac;
}());
exports.MFrac = MFrac;

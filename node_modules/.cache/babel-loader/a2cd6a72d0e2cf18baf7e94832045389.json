{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HeadObjectCommand } from \"../commands/HeadObjectCommand\";\nimport { WaiterState, createWaiter } from \"@aws-sdk/util-waiter\";\n\nvar checkState = function checkState(client, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var result, exception_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , client.send(new HeadObjectCommand(input))];\n\n        case 1:\n          result = _a.sent();\n          return [2\n          /*return*/\n          , {\n            state: WaiterState.SUCCESS\n          }];\n\n        case 2:\n          exception_1 = _a.sent();\n          return [3\n          /*break*/\n          , 3];\n\n        case 3:\n          return [2\n          /*return*/\n          , {\n            state: WaiterState.RETRY\n          }];\n      }\n    });\n  });\n};\n/**\n *\n *  @param params : Waiter configuration options.\n *  @param input : the input to HeadObjectCommand for polling.\n */\n\n\nexport var waitForObjectExists = function waitForObjectExists(params, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var serviceDefaults;\n    return __generator(this, function (_a) {\n      serviceDefaults = {\n        minDelay: 5,\n        maxDelay: 120\n      };\n      return [2\n      /*return*/\n      , createWaiter(__assign(__assign({}, serviceDefaults), params), input, checkState)];\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}
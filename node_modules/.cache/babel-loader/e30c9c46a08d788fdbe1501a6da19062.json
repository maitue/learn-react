{"ast":null,"code":"import _objectSpread from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\src\\\\app\\\\pages\\\\auth\\\\Login.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { TextField } from \"@material-ui/core\";\nimport * as auth from \"../../store/ducks/auth.duck\";\nimport { showErrorMessage } from \"../../actions/notification\";\nimport { Auth } from \"aws-amplify\";\nimport { actions } from \"../../store/ducks/auth.duck\";\nimport { toAbsoluteUrl } from \"../../../_metronic\";\nimport { addToken, getPermissionsDetail } from \"../../services/CognitoService\";\nimport { LogErrorAuth } from \"../../services/LogService\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from \"react-router-dom\";\nimport { setAppLoading } from \"../../store/actions/HeaderAction\";\n\nfunction Login(props) {\n  var _this = this;\n\n  var intl = props.intl;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userChangePassword = _useState6[0],\n      setUserChangePassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailConfirm = _useState8[0],\n      setEmailConfirm = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginForm = _useState10[0],\n      setLoginForm = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loginAble = _useState12[0],\n      setLoginAble = _useState12[1];\n\n  var dispatch = useDispatch();\n\n  var _useState13 = useState({\n    paddingRight: \"2.5rem\",\n    margin: \"0 auto\",\n    marginRight: \"0px\"\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loadingButtonStyle = _useState14[0],\n      setLoadingButtonStyle = _useState14[1];\n\n  useEffect(function () {\n    localStorage.clear();\n  }, []);\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      localData = _useState16[0],\n      setLocalData = _useState16[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n    setLoadingButtonStyle({\n      paddingRight: \"3.5rem\"\n    });\n  };\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n    setLoadingButtonStyle({\n      paddingRight: \"2.5rem\"\n    });\n  };\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(values, _ref) {\n      var setStatus, setSubmitting, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n\n              if (values.email) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showErrorMessage(\"Email must not be empty!\"));\n\n            case 3:\n              if (values.password) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showErrorMessage(\"Password must not be empty!\"));\n\n            case 5:\n              if (!(values.password.length < 8)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showErrorMessage(\"Password must be at least 8 characters long!\"));\n\n            case 7:\n              enableLoading();\n              dispatch(setAppLoading(true));\n              setLocalData({\n                values: values,\n                action: {\n                  setStatus: setStatus,\n                  setSubmitting: setSubmitting\n                }\n              });\n              _context.next = 12;\n              return Auth.signIn({\n                username: values.email.split(' ').join(''),\n                password: values.password.split(' ').join('')\n              }).catch(function (err) {\n                LogErrorAuth({\n                  type: 'LOGIN',\n                  username: values.email,\n                  password: values.password,\n                  reason: err,\n                  message: err.message\n                });\n                showErrorMessage(err.message);\n                return null;\n              });\n\n            case 12:\n              result = _context.sent;\n              setSubmitting(false);\n              dispatch(setAppLoading(false));\n              disableLoading();\n\n              if (result) {\n                console.log(result);\n\n                if (result.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n                  setUserChangePassword(result);\n                  setNewPassword(true);\n                  setLoginForm(false);\n                  setEmailConfirm(false);\n                } else {\n                  onLoginSuccess(result);\n                }\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sentEmailConfirm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(username) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setNewPassword(false);\n              setLoginForm(false);\n              setEmailConfirm(true);\n              dispatch(setAppLoading(true));\n              _context2.next = 7;\n              return Auth.verifyCurrentUserAttribute(\"email\").catch(function (reason) {\n                LogErrorAuth({\n                  type: 'SENT_EMAIL_CONFIRM',\n                  username: username,\n                  reason: reason,\n                  message: reason.message\n                });\n                showErrorMessage(reason.message);\n              });\n\n            case 7:\n              dispatch(setAppLoading(false));\n              console.log(\"code resent successfully\");\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"error resending code: \", _context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function sentEmailConfirm(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var confirmEmail = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(code) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Auth.verifyCurrentUserAttributeSubmit(\"email\", code).catch(function (reason) {\n                showErrorMessage(reason.message);\n              });\n\n            case 2:\n              setNewPassword(false);\n              setLoginForm(true);\n              setEmailConfirm(false);\n              _context3.next = 7;\n              return _onSubmit(localData.values, localData.action);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function confirmEmail(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitVerifyEmail = function onSubmitVerifyEmail(values, he) {\n    confirmEmail(values.code);\n  };\n\n  var onLoginSuccess = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(result) {\n      var roles, _resultPermission2, _resultPermission2$da, resultPermission, _resultPermission, _resultPermission$dat;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(result && !result.signInUserSession.idToken.payload.email_verified)) {\n                _context4.next = 4;\n                break;\n              }\n\n              _context4.next = 3;\n              return sentEmailConfirm(result.username);\n\n            case 3:\n              return _context4.abrupt(\"return\");\n\n            case 4:\n              roles = result.signInUserSession.accessToken.payload[\"cognito:groups\"];\n\n              if (!(roles && (roles.includes('admin') || roles.includes('normal-admin')))) {\n                _context4.next = 19;\n                break;\n              }\n\n              _context4.next = 8;\n              return addToken(result.signInUserSession.idToken.jwtToken, result.username).then();\n\n            case 8:\n              resultPermission = null;\n\n              if (!roles.includes('normal-admin')) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 12;\n              return getPermissionsDetail(result.username, result.signInUserSession.idToken.jwtToken);\n\n            case 12:\n              resultPermission = _context4.sent;\n              console.log('resultPermission', resultPermission);\n\n              if (!(!resultPermission || !resultPermission.data || !((_resultPermission = resultPermission) === null || _resultPermission === void 0 ? void 0 : (_resultPermission$dat = _resultPermission.data) === null || _resultPermission$dat === void 0 ? void 0 : _resultPermission$dat.permissions))) {\n                _context4.next = 16;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", showErrorMessage(\"You do not have access, please check again\"));\n\n            case 16:\n              dispatch(actions.fulfillUser({\n                username: result.username,\n                permission: resultPermission && resultPermission.data && ((_resultPermission2 = resultPermission) === null || _resultPermission2 === void 0 ? void 0 : (_resultPermission2$da = _resultPermission2.data) === null || _resultPermission2$da === void 0 ? void 0 : _resultPermission2$da.permissions) ? resultPermission.data : [],\n                accessToken: result.signInUserSession.accessToken.jwtToken,\n                signInUserSession: {\n                  idToken: {\n                    jwtToken: result.signInUserSession.idToken.jwtToken,\n                    exp: result.signInUserSession.idToken.payload.exp\n                  }\n                },\n                attributes: result.attributes,\n                roles: roles\n              }, result.signInUserSession.accessToken.payload[\"cognito:groups\"], //sessionExpiredAt\n              result.signInUserSession.idToken.payload.exp));\n              _context4.next = 21;\n              break;\n\n            case 19:\n              LogErrorAuth({\n                type: 'LOGIN_ROLE',\n                username: result.username,\n                reason: roles,\n                message: 'Roles invalid'\n              });\n              return _context4.abrupt(\"return\", showErrorMessage(\"Cannot login\"));\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onLoginSuccess(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitNewPassword = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(values, _ref6) {\n      var setStatus, setSubmitting, result;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setStatus = _ref6.setStatus, setSubmitting = _ref6.setSubmitting;\n\n              if (!(values.password.length < 8)) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", showErrorMessage(\"Password must be at least 8 characters long!\"));\n\n            case 3:\n              if (!(values.repassword !== values.password)) {\n                _context5.next = 5;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", showErrorMessage(\"Passwords do not match\"));\n\n            case 5:\n              dispatch(setAppLoading(true));\n              _context5.next = 8;\n              return Auth.completeNewPassword(userChangePassword, values.password, {}).catch(function (err) {\n                LogErrorAuth(_objectSpread(_objectSpread({\n                  type: 'CHANGE_PASSWORD'\n                }, localData.values), {}, {\n                  password: values.password,\n                  reason: err,\n                  message: err.message\n                }));\n                showErrorMessage(err.message);\n                return null;\n              });\n\n            case 8:\n              result = _context5.sent;\n              dispatch(setAppLoading(false));\n\n              if (result) {\n                setLocalData(_objectSpread(_objectSpread({}, localData), {}, {\n                  values: _objectSpread(_objectSpread({}, localData.values), {}, {\n                    password: values.password\n                  })\n                }));\n                onLoginSuccess(result);\n              }\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function onSubmitNewPassword(_x6, _x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/media/bg/logo.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, \"Layla Content Management System\")), newPassword ? /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      repassword: \"\",\n      name: \"\"\n    },\n    onSubmit: function onSubmit(values, formikHelpers) {\n      return onSubmitNewPassword(values, formikHelpers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, function (_ref8) {\n    var values = _ref8.values,\n        status = _ref8.status,\n        errors = _ref8.errors,\n        touched = _ref8.touched,\n        handleChange = _ref8.handleChange,\n        handleBlur = _ref8.handleBlur,\n        handleSubmit = _ref8.handleSubmit,\n        isSubmitting = _ref8.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 49\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 49\n      }\n    }, \"Change new password to login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: 'New password',\n      type: \"password\",\n      className: \"kt-width-full\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: (values.password || '').split(' ').join(''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: 'Confirm new password',\n      type: \"password\",\n      className: \"kt-width-full\",\n      name: \"repassword\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: (values.repassword || '').split(' ').join(''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-login__actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"kt_login_signin_submit\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 45\n      }\n    }, loading ? 'Change password...' : 'Change password')));\n  }) : null, emailConfirm ? /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      code: \"\"\n    },\n    onSubmit: function onSubmit(values, formikHelpers) {\n      return onSubmitVerifyEmail(values, formikHelpers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }, function (_ref9) {\n    var values = _ref9.values,\n        status = _ref9.status,\n        errors = _ref9.errors,\n        touched = _ref9.touched,\n        handleChange = _ref9.handleChange,\n        handleBlur = _ref9.handleBlur,\n        handleSubmit = _ref9.handleSubmit,\n        isSubmitting = _ref9.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 49\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 49\n      }\n    }, \"We sent a verification email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Code OTP\",\n      className: \"kt-width-full\",\n      name: \"code\",\n      margin: \"normal\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: (values.code || '').split(' ').join(''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-login__actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"kt_login_signin_submit\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 45\n      }\n    }, loading ? 'Verify email...' : 'Verify email')));\n  }) : null, loginForm ? /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values, formikHelpers) {\n      return _onSubmit(values, formikHelpers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, function (_ref10) {\n    var values = _ref10.values,\n        status = _ref10.status,\n        errors = _ref10.errors,\n        touched = _ref10.touched,\n        handleChange = _ref10.handleChange,\n        handleBlur = _ref10.handleBlur,\n        handleSubmit = _ref10.handleSubmit,\n        isSubmitting = _ref10.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 37\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 49\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 49\n      }\n    }, \"Please login to the system to continue\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: 'Email/Username',\n      autoFocus: true,\n      type: \"text\",\n      className: \"kt-width-full\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: (values.email || \"\").split(' ').join(''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: 'Password',\n      type: \"password\",\n      className: \"kt-width-full\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: (values.password || \"\").split(' ').join(''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      sitekey: process.env.RECAPTCHA,\n      onChange: function onChange() {\n        setLoginAble(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-login__actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"kt_login_signin_submit\",\n      type: \"submit\",\n      disabled: isSubmitting || !loginAble,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 45\n      }\n    }, loading ? 'Login...' : 'Login')), /*#__PURE__*/React.createElement(Link, {\n      className: 'forgotPassword',\n      to: '/auth/forgotPassword',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 41\n      }\n    }, \"Forgot password?\"));\n  }) : null)));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Login));","map":{"version":3,"names":["React","useEffect","useState","Formik","connect","useDispatch","FormattedMessage","injectIntl","TextField","auth","showErrorMessage","Auth","actions","toAbsoluteUrl","addToken","getPermissionsDetail","LogErrorAuth","ReCAPTCHA","Link","setAppLoading","Login","props","intl","loading","setLoading","newPassword","setNewPassword","userChangePassword","setUserChangePassword","emailConfirm","setEmailConfirm","loginForm","setLoginForm","loginAble","setLoginAble","dispatch","paddingRight","margin","marginRight","loadingButtonStyle","setLoadingButtonStyle","localStorage","clear","localData","setLocalData","enableLoading","disableLoading","onSubmit","values","setStatus","setSubmitting","email","password","length","action","signIn","username","split","join","catch","err","type","reason","message","result","console","log","challengeName","onLoginSuccess","sentEmailConfirm","verifyCurrentUserAttribute","confirmEmail","code","verifyCurrentUserAttributeSubmit","onSubmitVerifyEmail","he","signInUserSession","idToken","payload","email_verified","roles","accessToken","includes","jwtToken","then","resultPermission","data","permissions","fulfillUser","permission","exp","attributes","onSubmitNewPassword","repassword","completeNewPassword","name","formikHelpers","status","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","process","env","RECAPTCHA"],"sources":["C:/laragon/www/LaylaUserGuide/src/app/pages/auth/Login.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport {Formik} from \"formik\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\nimport {TextField} from \"@material-ui/core\";\nimport * as auth from \"../../store/ducks/auth.duck\";\nimport {showErrorMessage} from \"../../actions/notification\";\nimport {Auth} from \"aws-amplify\";\nimport {actions} from \"../../store/ducks/auth.duck\";\nimport {toAbsoluteUrl} from \"../../../_metronic\";\nimport {addToken, getPermissionsDetail} from \"../../services/CognitoService\";\nimport {LogErrorAuth} from \"../../services/LogService\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {Link} from \"react-router-dom\";\nimport {setAppLoading} from \"../../store/actions/HeaderAction\";\n\nfunction Login(props) {\n    const {intl} = props;\n    const [loading, setLoading] = useState(false);\n    const [newPassword, setNewPassword] = useState(false);\n    const [userChangePassword, setUserChangePassword] = useState(null);\n    const [emailConfirm, setEmailConfirm] = useState(false);\n    const [loginForm, setLoginForm] = useState(true);\n    const [loginAble, setLoginAble] = useState(false);\n    const dispatch = useDispatch();\n    const [loadingButtonStyle, setLoadingButtonStyle] = useState({\n        paddingRight: \"2.5rem\",\n        margin: \"0 auto\",\n        marginRight: \"0px\",\n    });\n\n    useEffect(() => {\n        localStorage.clear();\n    }, [])\n\n    let [localData, setLocalData] = useState({});\n\n    const enableLoading = () => {\n        setLoading(true);\n        setLoadingButtonStyle({paddingRight: \"3.5rem\"});\n    };\n\n    const disableLoading = () => {\n        setLoading(false);\n        setLoadingButtonStyle({paddingRight: \"2.5rem\"});\n    };\n\n    const onSubmit = async (values, {setStatus, setSubmitting}) => {\n        if (!values.email) {\n            return showErrorMessage(\"Email must not be empty!\");\n        }\n        if (!values.password) {\n            return showErrorMessage(\"Password must not be empty!\");\n        }\n        if (values.password.length < 8) {\n            return showErrorMessage(\"Password must be at least 8 characters long!\");\n        }\n        enableLoading();\n        dispatch(setAppLoading(true));\n        setLocalData({\n            values,\n            action: {setStatus, setSubmitting},\n        });\n        let result = await Auth.signIn({\n            username: values.email.split(' ').join(''),\n            password: values.password.split(' ').join(''),\n        }).catch((err) => {\n\n            LogErrorAuth({\n                type: 'LOGIN',\n                username: values.email,\n                password: values.password,\n                reason: err,\n                message: err.message\n            });\n            showErrorMessage(err.message);\n            return null;\n        });\n        setSubmitting(false);\n        dispatch(setAppLoading(false));\n        disableLoading();\n        if (result) {\n            console.log(result);\n            if (result.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n                setUserChangePassword(result);\n                setNewPassword(true);\n                setLoginForm(false);\n                setEmailConfirm(false);\n            } else {\n                onLoginSuccess(result);\n            }\n        }\n    };\n\n    const sentEmailConfirm = async (username) => {\n        try {\n            setNewPassword(false);\n            setLoginForm(false);\n            setEmailConfirm(true);\n            dispatch(setAppLoading(true));\n            await Auth.verifyCurrentUserAttribute(\"email\").catch(reason => {\n                LogErrorAuth({\n                    type: 'SENT_EMAIL_CONFIRM',\n                    username: username,\n                    reason: reason,\n                    message: reason.message\n                });\n                showErrorMessage(reason.message);\n            });\n            dispatch(setAppLoading(false));\n            console.log(\"code resent successfully\");\n\n        } catch (err) {\n            console.log(\"error resending code: \", err);\n        }\n    };\n\n    const confirmEmail = async (code) => {\n        await Auth.verifyCurrentUserAttributeSubmit(\"email\", code).catch(reason => {\n            showErrorMessage(reason.message);\n        });\n        setNewPassword(false);\n        setLoginForm(true);\n        setEmailConfirm(false);\n        await onSubmit(localData.values, localData.action);\n    };\n\n    const onSubmitVerifyEmail = (values, he) => {\n        confirmEmail(values.code);\n    };\n\n    const onLoginSuccess = async (result) => {\n        if (result && !result.signInUserSession.idToken.payload.email_verified) {\n            await sentEmailConfirm(result.username);\n            return;\n        }\n        const roles = result.signInUserSession.accessToken.payload[\"cognito:groups\"];\n        if (roles && (roles.includes('admin') || roles.includes('normal-admin'))) {\n            await addToken(result.signInUserSession.idToken.jwtToken, result.username).then();\n            let resultPermission = null;\n            if (roles.includes('normal-admin')) {\n                resultPermission = await getPermissionsDetail(result.username, result.signInUserSession.idToken.jwtToken);\n                console.log('resultPermission', resultPermission);\n                if (!resultPermission || !resultPermission.data || !resultPermission?.data?.permissions) {\n                    return showErrorMessage(\"You do not have access, please check again\");\n                }\n            }\n\n            dispatch(\n                actions.fulfillUser(\n                    {\n                        username: result.username,\n                        permission: resultPermission && resultPermission.data && resultPermission?.data?.permissions ? resultPermission.data : [],\n                        accessToken: result.signInUserSession.accessToken.jwtToken,\n                        signInUserSession: {\n                            idToken: {\n                                jwtToken: result.signInUserSession.idToken.jwtToken,\n                                exp: result.signInUserSession.idToken.payload.exp,\n                            }\n                        },\n                        attributes: result.attributes,\n                        roles\n                    },\n                    result.signInUserSession.accessToken.payload[\"cognito:groups\"],\n                    //sessionExpiredAt\n                    result.signInUserSession.idToken.payload.exp,\n                ),\n            );\n        } else {\n            LogErrorAuth({\n                type: 'LOGIN_ROLE',\n                username: result.username,\n                reason: roles,\n                message: 'Roles invalid'\n            });\n            return showErrorMessage(\"Cannot login\");\n        }\n    };\n\n    const onSubmitNewPassword = async (values, {setStatus, setSubmitting}) => {\n        if (values.password.length < 8) {\n            return showErrorMessage(\"Password must be at least 8 characters long!\");\n        }\n        if (values.repassword !== values.password) {\n            return showErrorMessage(\"Passwords do not match\");\n        }\n        dispatch(setAppLoading(true));\n        const result = await Auth.completeNewPassword(userChangePassword, values.password, {}).catch((err) => {\n            LogErrorAuth({\n                type: 'CHANGE_PASSWORD',\n                ...localData.values,\n                password: values.password,\n                reason: err,\n                message: err.message\n            });\n            showErrorMessage(err.message);\n            return null;\n        });\n        dispatch(setAppLoading(false));\n        if (result) {\n            setLocalData({\n                ...localData,\n                values: {\n                    ...localData.values,\n                    password: values.password,\n                },\n            });\n            onLoginSuccess(result);\n        }\n    };\n\n    return (\n        <>\n\n            <div className=\"kt-login__body\">\n                <div className=\"kt-login__form\">\n                    <div className=\"kt-login__title\">\n                        <img src={toAbsoluteUrl(\"/media/bg/logo.svg\")}/>\n                        <h3>\n                            Layla Content Management System\n                        </h3>\n                    </div>\n                    {\n                        newPassword ? (\n                            <Formik\n                                initialValues={{\n                                    password: \"\",\n                                    repassword: \"\",\n                                    name: \"\",\n                                }}\n                                onSubmit={(values, formikHelpers) => onSubmitNewPassword(values, formikHelpers)}>\n                                {({\n                                      values,\n                                      status,\n                                      errors,\n                                      touched,\n                                      handleChange,\n                                      handleBlur,\n                                      handleSubmit,\n                                      isSubmitting,\n                                  }) => (\n                                    <form\n                                        noValidate={true}\n                                        autoComplete=\"off\"\n                                        className=\"kt-form\"\n                                        onSubmit={handleSubmit}>\n                                        {status ? (\n                                            <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>\n                                        ) : (\n                                            <div role=\"alert\" className=\"alert alert-info\">\n                                                <div className=\"alert-text\">\n                                                    Change new password to login\n                                                </div>\n                                            </div>\n                                        )}\n\n\n                                        <div className=\"form-group\">\n                                            <input\n                                                placeholder={'New password'}\n                                                type=\"password\"\n                                                className=\"kt-width-full\"\n                                                name=\"password\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={(values.password || '').split(' ').join('')}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <input\n                                                placeholder={'Confirm new password'}\n                                                type=\"password\"\n                                                className=\"kt-width-full\"\n                                                name=\"repassword\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={(values.repassword || '').split(' ').join('')}\n                                            />\n                                        </div>\n\n\n                                        <div className=\"kt-login__actions\">\n                                            <button id=\"kt_login_signin_submit\" type=\"submit\">\n                                                {loading ? 'Change password...' : 'Change password'}\n                                            </button>\n                                        </div>\n                                    </form>\n                                )}\n                            </Formik>\n                        ) : null\n                    }\n                    {\n                        emailConfirm ? (\n                            <Formik\n                                initialValues={{\n                                    code: \"\",\n                                }}\n                                onSubmit={(values, formikHelpers) => onSubmitVerifyEmail(values, formikHelpers)}>\n                                {({\n                                      values,\n                                      status,\n                                      errors,\n                                      touched,\n                                      handleChange,\n                                      handleBlur,\n                                      handleSubmit,\n                                      isSubmitting,\n                                  }) => (\n                                    <form\n                                        noValidate={true}\n                                        autoComplete=\"off\"\n                                        className=\"kt-form\"\n                                        onSubmit={handleSubmit}>\n                                        {status ? (\n                                            <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>\n                                        ) : (\n                                            <div role=\"alert\" className=\"alert alert-info\">\n                                                <div className=\"alert-text\">\n                                                    We sent a verification email\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        <div className=\"form-group\">\n                                            <TextField\n                                                label=\"Code OTP\"\n                                                className=\"kt-width-full\"\n                                                name=\"code\"\n                                                margin=\"normal\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={(values.code||'').split(' ').join('')}\n                                            />\n                                        </div>\n\n\n                                        <div className=\"kt-login__actions\">\n                                            <button id=\"kt_login_signin_submit\" type=\"submit\">\n                                                {loading ? 'Verify email...' : 'Verify email'}\n                                            </button>\n                                        </div>\n                                    </form>\n                                )}\n                            </Formik>\n                        ) : null\n                    }\n                    {\n                        loginForm ? (\n                            <Formik\n                                initialValues={{\n                                    email: \"\",\n                                    password: \"\",\n                                }}\n                                onSubmit={(values, formikHelpers) => onSubmit(values, formikHelpers)}>\n                                {({\n                                      values,\n                                      status,\n                                      errors,\n                                      touched,\n                                      handleChange,\n                                      handleBlur,\n                                      handleSubmit,\n                                      isSubmitting,\n                                  }) => (\n                                    <form\n                                        noValidate={true}\n                                        autoComplete=\"off\"\n                                        className=\"kt-form\"\n                                        onSubmit={handleSubmit}>\n                                        {status ? (\n                                            <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>\n                                        ) : (\n                                            <div role=\"alert\" className=\"alert alert-info\">\n                                                <div className=\"alert-text\">\n                                                    Please login to the system to continue\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        <div className=\"form-group\">\n                                            <input\n                                                placeholder={'Email/Username'}\n                                                autoFocus\n                                                type=\"text\"\n                                                className=\"kt-width-full\"\n                                                name=\"email\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={(values.email || \"\").split(' ').join('')}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <input\n                                                placeholder={'Password'}\n                                                type=\"password\"\n                                                className=\"kt-width-full\"\n                                                name=\"password\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={(values.password || \"\").split(' ').join('')}\n                                            />\n                                        </div>\n\n\n                                        <div className=\"form-group\">\n                                            <ReCAPTCHA sitekey={process.env.RECAPTCHA}\n                                                       onChange={() => {\n                                                           setLoginAble(true);\n                                                       }}\n                                            />\n                                        </div>\n\n                                        <div className=\"kt-login__actions\">\n                                            <button id=\"kt_login_signin_submit\" type=\"submit\"\n                                                    disabled={isSubmitting || !loginAble}>\n                                                {loading ? 'Login...' : 'Login'}\n                                            </button>\n                                        </div>\n                                        <Link className={'forgotPassword'} to={'/auth/forgotPassword'}>Forgot\n                                            password?</Link>\n\n                                    </form>\n                                )}\n                            </Formik>\n                        ) : null\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(connect(null, auth.actions)(Login));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar utils = require(\"./utils\");\n\nfunction transformRequest(data) {\n  if (utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isBlob(data)) {\n    return data;\n  } // Object and Array: returns a deep copy\n\n\n  if (utils.isObjectOrArray(data)) {\n    return JSON.parse(JSON.stringify(data));\n  } // for primitives like string, undefined, null, number\n\n\n  return data;\n}\n\nfunction makeResponse(result, config) {\n  return {\n    status: result[0],\n    data: transformRequest(result[1]),\n    headers: result[2],\n    config: config,\n    request: {\n      responseURL: config.url\n    }\n  };\n}\n\nfunction handleRequest(mockAdapter, resolve, reject, config) {\n  var url = config.url || \"\"; // TODO we're not hitting this `if` in any of the tests, investigate\n\n  if (config.baseURL && url.substr(0, config.baseURL.length) === config.baseURL) {\n    url = url.slice(config.baseURL.length);\n  }\n\n  delete config.adapter;\n  mockAdapter.history[config.method].push(config);\n  var handler = utils.findHandler(mockAdapter.handlers, config.method, url, config.data, config.params, config.headers, config.baseURL);\n\n  if (handler) {\n    if (handler.length === 7) {\n      utils.purgeIfReplyOnce(mockAdapter, handler);\n    }\n\n    if (handler.length === 2) {\n      // passThrough handler\n      mockAdapter.originalAdapter(config).then(resolve, reject);\n    } else if (typeof handler[3] !== \"function\") {\n      utils.settle(resolve, reject, makeResponse(handler.slice(3), config), mockAdapter.delayResponse);\n    } else {\n      var result = handler[3](config); // TODO throw a sane exception when return value is incorrect\n\n      if (typeof result.then !== \"function\") {\n        utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n      } else {\n        result.then(function (result) {\n          if (result.config && result.status) {\n            utils.settle(resolve, reject, makeResponse([result.status, result.data, result.headers], result.config), 0);\n          } else {\n            utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n          }\n        }, function (error) {\n          if (mockAdapter.delayResponse > 0) {\n            setTimeout(function () {\n              reject(error);\n            }, mockAdapter.delayResponse);\n          } else {\n            reject(error);\n          }\n        });\n      }\n    }\n  } else {\n    // handler not found\n    switch (mockAdapter.onNoMatch) {\n      case \"passthrough\":\n        mockAdapter.originalAdapter(config).then(resolve, reject);\n        break;\n\n      case \"throwException\":\n        throw utils.createCouldNotFindMockError(config);\n\n      default:\n        utils.settle(resolve, reject, {\n          status: 404,\n          config: config\n        }, mockAdapter.delayResponse);\n    }\n  }\n}\n\nmodule.exports = handleRequest;","map":null,"metadata":{},"sourceType":"script"}
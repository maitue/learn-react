{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\n/**\n * @internal\n */\n\nexport function validateBucketNameMiddleware() {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var Bucket, err;\n        return __generator(this, function (_a) {\n          Bucket = args.input.Bucket;\n\n          if (typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            err = new Error(\"Bucket name shouldn't contain '/', received '\" + Bucket + \"'\");\n            err.name = \"InvalidBucketName\";\n            throw err;\n          }\n\n          return [2\n          /*return*/\n          , next(__assign({}, args))];\n        });\n      });\n    };\n  };\n}\n/**\n * @internal\n */\n\nexport var validateBucketNameMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true\n};\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport var getValidateBucketNamePlugin = function getValidateBucketNamePlugin(unused) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { URL_API } from \"../config/url\";\nimport { AUTH_TOKEN_KEY } from \"../config/auth\";\nexport default (function (method, url) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  var responseType = arguments.length > 4 ? arguments[4] : undefined;\n  method = method.toLowerCase();\n  var storeData = localStorage.getItem(AUTH_TOKEN_KEY);\n  storeData = storeData ? JSON.parse(storeData) : \"\";\n  var opts = {\n    method: method,\n    url: URL_API + url,\n    headers: {\n      token: storeData && storeData.authToken ? JSON.parse(storeData.authToken) : \"\"\n    }\n  };\n  if (method === \"get\") opts.params = params;else opts.data = params;\n\n  if (headers) {\n    opts.headers = Object.assign(opts.headers, headers);\n  }\n\n  if (responseType) {\n    opts.responseType = responseType;\n  }\n\n  opts.validateStatus = function (status) {\n    return true;\n  };\n\n  return axios(opts);\n});","map":{"version":3,"names":["axios","URL_API","AUTH_TOKEN_KEY","method","url","params","headers","responseType","toLowerCase","storeData","localStorage","getItem","JSON","parse","opts","token","authToken","data","Object","assign","validateStatus","status"],"sources":["C:/laragon/www/Archive/src/app/libs/request.js"],"sourcesContent":["import axios from \"axios\";\nimport { URL_API } from \"../config/url\";\nimport { AUTH_TOKEN_KEY } from \"../config/auth\";\n\nexport default (method, url, params = {}, headers = \"\", responseType) => {\n  method = method.toLowerCase();\n  let storeData = localStorage.getItem(AUTH_TOKEN_KEY);\n\n  storeData = storeData ? JSON.parse(storeData) : \"\";\n\n  let opts = {\n    method: method,\n    url: URL_API + url,\n    headers: {\n      token: storeData && storeData.authToken ? JSON.parse(storeData.authToken) : \"\",\n    },\n  };\n\n  if (method === \"get\") opts.params = params;\n  else opts.data = params;\n\n  if (headers) {\n    opts.headers = Object.assign(opts.headers, headers);\n  }\n\n  if (responseType) {\n    opts.responseType = responseType;\n  }\n\n  opts.validateStatus = (status) => {\n    return true;\n  };\n\n  return axios(opts);\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,gBAAe,UAACC,MAAD,EAASC,GAAT,EAA0D;EAAA,IAA5CC,MAA4C,uEAAnC,EAAmC;EAAA,IAA/BC,OAA+B,uEAArB,EAAqB;EAAA,IAAjBC,YAAiB;EACvEJ,MAAM,GAAGA,MAAM,CAACK,WAAP,EAAT;EACA,IAAIC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBT,cAArB,CAAhB;EAEAO,SAAS,GAAGA,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAAhD;EAEA,IAAIK,IAAI,GAAG;IACTX,MAAM,EAAEA,MADC;IAETC,GAAG,EAAEH,OAAO,GAAGG,GAFN;IAGTE,OAAO,EAAE;MACPS,KAAK,EAAEN,SAAS,IAAIA,SAAS,CAACO,SAAvB,GAAmCJ,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACO,SAArB,CAAnC,GAAqE;IADrE;EAHA,CAAX;EAQA,IAAIb,MAAM,KAAK,KAAf,EAAsBW,IAAI,CAACT,MAAL,GAAcA,MAAd,CAAtB,KACKS,IAAI,CAACG,IAAL,GAAYZ,MAAZ;;EAEL,IAAIC,OAAJ,EAAa;IACXQ,IAAI,CAACR,OAAL,GAAeY,MAAM,CAACC,MAAP,CAAcL,IAAI,CAACR,OAAnB,EAA4BA,OAA5B,CAAf;EACD;;EAED,IAAIC,YAAJ,EAAkB;IAChBO,IAAI,CAACP,YAAL,GAAoBA,YAApB;EACD;;EAEDO,IAAI,CAACM,cAAL,GAAsB,UAACC,MAAD,EAAY;IAChC,OAAO,IAAP;EACD,CAFD;;EAIA,OAAOrB,KAAK,CAACc,IAAD,CAAZ;AACD,CA9BD"},"metadata":{},"sourceType":"module"}
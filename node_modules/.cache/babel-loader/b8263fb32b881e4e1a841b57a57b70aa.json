{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketLoggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketLoggingCommand, serializeAws_restXmlPutBucketLoggingCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Set the logging parameters for a bucket and to specify permissions for who can view and\n *          modify the logging parameters. All logs are saved to buckets in the same AWS Region as the\n *          source bucket. To set the logging status of a bucket, you must be the bucket owner.</p>\n *\n *          <p>The bucket owner is automatically granted FULL_CONTROL to all logs. You use the\n *             <code>Grantee</code> request element to grant access to other people. The\n *             <code>Permissions</code> request element specifies the kind of access the grantee has to\n *          the logs.</p>\n *\n *          <p>\n *             <b>Grantee Values</b>\n *          </p>\n *          <p>You can specify the person (grantee) to whom you're assigning access rights (using\n *          request elements) in the following ways:</p>\n *\n *          <ul>\n *             <li>\n *                <p>By the person's ID:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"CanonicalUser\"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>\n *                   </Grantee></code>\n *                </p>\n *                <p>DisplayName is optional and ignored in the request.</p>\n *             </li>\n *             <li>\n *                <p>By Email address:</p>\n *                <p>\n *                   <code> <Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"AmazonCustomerByEmail\"><EmailAddress><>Grantees@email.com<></EmailAddress></Grantee></code>\n *                </p>\n *                <p>The grantee is resolved to the CanonicalUser and, in a response to a GET Object\n *                acl request, appears as the CanonicalUser.</p>\n *             </li>\n *             <li>\n *                <p>By URI:</p>\n *                <p>\n *                   <code><Grantee xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n *                   xsi:type=\"Group\"><URI><>http://acs.amazonaws.com/groups/global/AuthenticatedUsers<></URI></Grantee></code>\n *                </p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>To enable logging, you use LoggingEnabled and its children request elements. To disable\n *          logging, you use an empty BucketLoggingStatus request element:</p>\n *\n *          <p>\n *             <code><BucketLoggingStatus xmlns=\"http://doc.s3.amazonaws.com/2006-03-01\"\n *             /></code>\n *          </p>\n *\n *          <p>For more information about server access logging, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html\">Server Access Logging</a>. </p>\n *\n *          <p>For more information about creating a bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>. For more\n *          information about returning the logging status of a bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html\">GetBucketLogging</a>.</p>\n *\n *          <p>The following operations are related to <code>PutBucketLogging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html\">GetBucketLogging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketLoggingCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketLoggingCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketLoggingCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketLoggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketLoggingCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketLoggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketLoggingCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketLoggingCommand(input, context);\n  };\n\n  PutBucketLoggingCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketLoggingCommand(output, context);\n  };\n\n  return PutBucketLoggingCommand;\n}($Command);\n\nexport { PutBucketLoggingCommand };","map":null,"metadata":{},"sourceType":"module"}
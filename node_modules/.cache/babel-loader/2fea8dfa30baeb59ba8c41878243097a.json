{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetPublicAccessBlockOutput, GetPublicAccessBlockRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetPublicAccessBlockCommand, serializeAws_restXmlGetPublicAccessBlockCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use\n *          this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code> permission.\n *          For more information about Amazon S3 permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a\n *          Policy</a>.</p>\n *\n *          <important>\n *             <p>When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket or\n *             an object, it checks the <code>PublicAccessBlock</code> configuration for both the\n *             bucket (or the bucket that contains the object) and the bucket owner's account. If the\n *                <code>PublicAccessBlock</code> settings are different between the bucket and the\n *             account, Amazon S3 uses the most restrictive combination of the bucket-level and\n *             account-level settings.</p>\n *          </important>\n *\n *          <p>For more information about when Amazon S3 considers a bucket or an object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a>.</p>\n *\n *          <p>The following operations are related to <code>GetPublicAccessBlock</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 Block\n *                   Public Access</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar GetPublicAccessBlockCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetPublicAccessBlockCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetPublicAccessBlockCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetPublicAccessBlockCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetPublicAccessBlockCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetPublicAccessBlockRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetPublicAccessBlockOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetPublicAccessBlockCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetPublicAccessBlockCommand(input, context);\n  };\n\n  GetPublicAccessBlockCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetPublicAccessBlockCommand(output, context);\n  };\n\n  return GetPublicAccessBlockCommand;\n}($Command);\n\nexport { GetPublicAccessBlockCommand };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { filterProps, createError } from '../utils';\nvar DISPLAY_NAMES_OPTONS = ['localeMatcher', 'style', 'type', 'fallback'];\nexport function formatDisplayName(_ref, getDisplayNames, value) {\n  var locale = _ref.locale,\n      onError = _ref.onError;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var DisplayNames = Intl.DisplayNames;\n\n  if (!DisplayNames) {\n    onError(createError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\"));\n  }\n\n  var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n\n  try {\n    return getDisplayNames(locale, filteredOptions).of(value);\n  } catch (e) {\n    onError(createError('Error formatting display name.', e));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TranslateClient } from \"./TranslateClient\";\nimport { CreateParallelDataCommand } from \"./commands/CreateParallelDataCommand\";\nimport { DeleteParallelDataCommand } from \"./commands/DeleteParallelDataCommand\";\nimport { DeleteTerminologyCommand } from \"./commands/DeleteTerminologyCommand\";\nimport { DescribeTextTranslationJobCommand } from \"./commands/DescribeTextTranslationJobCommand\";\nimport { GetParallelDataCommand } from \"./commands/GetParallelDataCommand\";\nimport { GetTerminologyCommand } from \"./commands/GetTerminologyCommand\";\nimport { ImportTerminologyCommand } from \"./commands/ImportTerminologyCommand\";\nimport { ListParallelDataCommand } from \"./commands/ListParallelDataCommand\";\nimport { ListTerminologiesCommand } from \"./commands/ListTerminologiesCommand\";\nimport { ListTextTranslationJobsCommand } from \"./commands/ListTextTranslationJobsCommand\";\nimport { StartTextTranslationJobCommand } from \"./commands/StartTextTranslationJobCommand\";\nimport { StopTextTranslationJobCommand } from \"./commands/StopTextTranslationJobCommand\";\nimport { TranslateTextCommand } from \"./commands/TranslateTextCommand\";\nimport { UpdateParallelDataCommand } from \"./commands/UpdateParallelDataCommand\";\n/**\n * <p>Provides translation between one source language and another of the same set of\n *       languages.</p>\n */\n\nvar Translate =\n/** @class */\nfunction (_super) {\n  __extends(Translate, _super);\n\n  function Translate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Translate.prototype.createParallelData = function (args, optionsOrCb, cb) {\n    var command = new CreateParallelDataCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.deleteParallelData = function (args, optionsOrCb, cb) {\n    var command = new DeleteParallelDataCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.deleteTerminology = function (args, optionsOrCb, cb) {\n    var command = new DeleteTerminologyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.describeTextTranslationJob = function (args, optionsOrCb, cb) {\n    var command = new DescribeTextTranslationJobCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.getParallelData = function (args, optionsOrCb, cb) {\n    var command = new GetParallelDataCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.getTerminology = function (args, optionsOrCb, cb) {\n    var command = new GetTerminologyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.importTerminology = function (args, optionsOrCb, cb) {\n    var command = new ImportTerminologyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.listParallelData = function (args, optionsOrCb, cb) {\n    var command = new ListParallelDataCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.listTerminologies = function (args, optionsOrCb, cb) {\n    var command = new ListTerminologiesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.listTextTranslationJobs = function (args, optionsOrCb, cb) {\n    var command = new ListTextTranslationJobsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.startTextTranslationJob = function (args, optionsOrCb, cb) {\n    var command = new StartTextTranslationJobCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.stopTextTranslationJob = function (args, optionsOrCb, cb) {\n    var command = new StopTextTranslationJobCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.translateText = function (args, optionsOrCb, cb) {\n    var command = new TranslateTextCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Translate.prototype.updateParallelData = function (args, optionsOrCb, cb) {\n    var command = new UpdateParallelDataCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return Translate;\n}(TranslateClient);\n\nexport { Translate };","map":null,"metadata":{},"sourceType":"module"}
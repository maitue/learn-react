{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StartDocumentAnalysisRequest, StartDocumentAnalysisResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StartDocumentAnalysisCommand, serializeAws_json1_1StartDocumentAnalysisCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Starts the asynchronous analysis of an input document for relationships between detected\n *          items such as key-value pairs, tables, and selection elements.</p>\n *\n *          <p>\n *             <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The\n *          documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name\n *          of the document.\n *          </p>\n *          <p>\n *             <code>StartDocumentAnalysis</code> returns a job identifier\n *             (<code>JobId</code>) that you use to get the results of the operation. When text\n *          analysis is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS)\n *          topic that you specify in <code>NotificationChannel</code>. To get the results of the text\n *          analysis operation, first check that the status value published to the Amazon SNS topic is\n *             <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>, and pass\n *          the job identifier (<code>JobId</code>) from the initial call to\n *             <code>StartDocumentAnalysis</code>.</p>\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>\n */\n\nvar StartDocumentAnalysisCommand =\n/** @class */\nfunction (_super) {\n  __extends(StartDocumentAnalysisCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function StartDocumentAnalysisCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  StartDocumentAnalysisCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"TextractClient\";\n    var commandName = \"StartDocumentAnalysisCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StartDocumentAnalysisRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StartDocumentAnalysisResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  StartDocumentAnalysisCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StartDocumentAnalysisCommand(input, context);\n  };\n\n  StartDocumentAnalysisCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StartDocumentAnalysisCommand(output, context);\n  };\n\n  return StartDocumentAnalysisCommand;\n}($Command);\n\nexport { StartDocumentAnalysisCommand };","map":null,"metadata":{},"sourceType":"module"}
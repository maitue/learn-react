{"ast":null,"code":"export function removeCSSClass(ele, cls) {\n  var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n  ele.className = ele.className.replace(reg, ' ');\n}\nexport function addCSSClass(ele, cls) {\n  ele.classList.add(cls);\n}\nexport var toAbsoluteUrl = function toAbsoluteUrl(pathname) {\n  return process.env.PUBLIC_URL + pathname;\n};\nexport function setupAxios(axios, store) {\n  axios.interceptors.request.use(function (config) {\n    var _store$getState = store.getState(),\n        authToken = _store$getState.auth.authToken;\n\n    if (authToken) {\n      config.headers.Authorization = \"Bearer \".concat(authToken);\n    }\n\n    return config;\n  }, function (err) {\n    return Promise.reject(err);\n  });\n}\n/*  removeStorage: removes a key from localStorage and its sibling expiracy key\n    params:\n        key <string>     : localStorage key to remove\n    returns:\n        <boolean> : telling if operation succeeded\n */\n\nexport function removeStorage(key) {\n  try {\n    localStorage.setItem(key, '');\n    localStorage.setItem(key + '_expiresIn', '');\n  } catch (e) {\n    console.log('removeStorage: Error removing key [' + key + '] from localStorage: ' + JSON.stringify(e));\n    return false;\n  }\n\n  return true;\n}\n/*  getStorage: retrieves a key from localStorage previously set with setStorage().\n    params:\n        key <string> : localStorage key\n    returns:\n        <string> : value of localStorage key\n        null : in case of expired key or failure\n */\n\nexport function getStorage(key) {\n  var now = Date.now(); //epoch time, lets deal only with integer\n  // set expiration for storage\n\n  var expiresIn = localStorage.getItem(key + '_expiresIn');\n\n  if (expiresIn === undefined || expiresIn === null) {\n    expiresIn = 0;\n  }\n\n  expiresIn = Math.abs(expiresIn);\n\n  if (expiresIn < now) {\n    // Expired\n    removeStorage(key);\n    return null;\n  } else {\n    try {\n      var value = localStorage.getItem(key);\n      return value;\n    } catch (e) {\n      console.log('getStorage: Error reading key [' + key + '] from localStorage: ' + JSON.stringify(e));\n      return null;\n    }\n  }\n}\n/*  setStorage: writes a key into localStorage setting a expire time\n    params:\n        key <string>     : localStorage key\n        value <string>   : localStorage value\n        expires <number> : number of seconds from now to expire the key\n    returns:\n        <boolean> : telling if operation succeeded\n */\n\nexport function setStorage(key, value, expires) {\n  if (expires === undefined || expires === null) {\n    expires = 24 * 60 * 60; // default: seconds for 1 day\n  }\n\n  var now = Date.now(); //millisecs since epoch time, lets deal only with integer\n\n  var schedule = now + expires * 1000;\n\n  try {\n    localStorage.setItem(key, value);\n    localStorage.setItem(key + '_expiresIn', schedule);\n  } catch (e) {\n    console.log('setStorage: Error setting key [' + key + '] in localStorage: ' + JSON.stringify(e));\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"names":["removeCSSClass","ele","cls","reg","RegExp","className","replace","addCSSClass","classList","add","toAbsoluteUrl","pathname","process","env","PUBLIC_URL","setupAxios","axios","store","interceptors","request","use","config","getState","authToken","auth","headers","Authorization","err","Promise","reject","removeStorage","key","localStorage","setItem","e","console","log","JSON","stringify","getStorage","now","Date","expiresIn","getItem","undefined","Math","abs","value","setStorage","expires","schedule"],"sources":["C:/laragon/www/learn-react/src/_metronic/utils/utils.js"],"sourcesContent":["export function removeCSSClass(ele, cls) {\n  const reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n  ele.className = ele.className.replace(reg, ' ');\n}\n\nexport function addCSSClass(ele, cls) {\n  ele.classList.add(cls);\n}\n\nexport const toAbsoluteUrl = (pathname) => process.env.PUBLIC_URL + pathname;\n\nexport function setupAxios(axios, store) {\n  axios.interceptors.request.use(\n    (config) => {\n      const {\n        auth: { authToken },\n      } = store.getState();\n\n      if (authToken) {\n        config.headers.Authorization = `Bearer ${authToken}`;\n      }\n\n      return config;\n    },\n    (err) => Promise.reject(err),\n  );\n}\n\n/*  removeStorage: removes a key from localStorage and its sibling expiracy key\n    params:\n        key <string>     : localStorage key to remove\n    returns:\n        <boolean> : telling if operation succeeded\n */\nexport function removeStorage(key) {\n  try {\n    localStorage.setItem(key, '');\n    localStorage.setItem(key + '_expiresIn', '');\n  } catch (e) {\n    console.log(\n      'removeStorage: Error removing key [' + key + '] from localStorage: ' + JSON.stringify(e),\n    );\n    return false;\n  }\n  return true;\n}\n\n/*  getStorage: retrieves a key from localStorage previously set with setStorage().\n    params:\n        key <string> : localStorage key\n    returns:\n        <string> : value of localStorage key\n        null : in case of expired key or failure\n */\nexport function getStorage(key) {\n  const now = Date.now(); //epoch time, lets deal only with integer\n  // set expiration for storage\n  let expiresIn = localStorage.getItem(key + '_expiresIn');\n  if (expiresIn === undefined || expiresIn === null) {\n    expiresIn = 0;\n  }\n\n  expiresIn = Math.abs(expiresIn);\n  if (expiresIn < now) {\n    // Expired\n    removeStorage(key);\n    return null;\n  } else {\n    try {\n      const value = localStorage.getItem(key);\n      return value;\n    } catch (e) {\n      console.log(\n        'getStorage: Error reading key [' + key + '] from localStorage: ' + JSON.stringify(e),\n      );\n      return null;\n    }\n  }\n}\n/*  setStorage: writes a key into localStorage setting a expire time\n    params:\n        key <string>     : localStorage key\n        value <string>   : localStorage value\n        expires <number> : number of seconds from now to expire the key\n    returns:\n        <boolean> : telling if operation succeeded\n */\nexport function setStorage(key, value, expires) {\n  if (expires === undefined || expires === null) {\n    expires = 24 * 60 * 60; // default: seconds for 1 day\n  }\n\n  const now = Date.now(); //millisecs since epoch time, lets deal only with integer\n  const schedule = now + expires * 1000;\n  try {\n    localStorage.setItem(key, value);\n    localStorage.setItem(key + '_expiresIn', schedule);\n  } catch (e) {\n    console.log(\n      'setStorage: Error setting key [' + key + '] in localStorage: ' + JSON.stringify(e),\n    );\n    return false;\n  }\n  return true;\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;EACvC,IAAMC,GAAG,GAAG,IAAIC,MAAJ,CAAW,YAAYF,GAAZ,GAAkB,SAA7B,CAAZ;EACAD,GAAG,CAACI,SAAJ,GAAgBJ,GAAG,CAACI,SAAJ,CAAcC,OAAd,CAAsBH,GAAtB,EAA2B,GAA3B,CAAhB;AACD;AAED,OAAO,SAASI,WAAT,CAAqBN,GAArB,EAA0BC,GAA1B,EAA+B;EACpCD,GAAG,CAACO,SAAJ,CAAcC,GAAd,CAAkBP,GAAlB;AACD;AAED,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD;EAAA,OAAcC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBH,QAAvC;AAAA,CAAtB;AAEP,OAAO,SAASI,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;EACvCD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAACC,MAAD,EAAY;IACV,sBAEIJ,KAAK,CAACK,QAAN,EAFJ;IAAA,IACUC,SADV,mBACEC,IADF,CACUD,SADV;;IAIA,IAAIA,SAAJ,EAAe;MACbF,MAAM,CAACI,OAAP,CAAeC,aAAf,oBAAyCH,SAAzC;IACD;;IAED,OAAOF,MAAP;EACD,CAXH,EAYE,UAACM,GAAD;IAAA,OAASC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAT;EAAA,CAZF;AAcD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,IAAI;IACFC,YAAY,CAACC,OAAb,CAAqBF,GAArB,EAA0B,EAA1B;IACAC,YAAY,CAACC,OAAb,CAAqBF,GAAG,GAAG,YAA3B,EAAyC,EAAzC;EACD,CAHD,CAGE,OAAOG,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CACE,wCAAwCL,GAAxC,GAA8C,uBAA9C,GAAwEM,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAD1E;IAGA,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,UAAT,CAAoBR,GAApB,EAAyB;EAC9B,IAAMS,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ,CAD8B,CACN;EACxB;;EACA,IAAIE,SAAS,GAAGV,YAAY,CAACW,OAAb,CAAqBZ,GAAG,GAAG,YAA3B,CAAhB;;EACA,IAAIW,SAAS,KAAKE,SAAd,IAA2BF,SAAS,KAAK,IAA7C,EAAmD;IACjDA,SAAS,GAAG,CAAZ;EACD;;EAEDA,SAAS,GAAGG,IAAI,CAACC,GAAL,CAASJ,SAAT,CAAZ;;EACA,IAAIA,SAAS,GAAGF,GAAhB,EAAqB;IACnB;IACAV,aAAa,CAACC,GAAD,CAAb;IACA,OAAO,IAAP;EACD,CAJD,MAIO;IACL,IAAI;MACF,IAAMgB,KAAK,GAAGf,YAAY,CAACW,OAAb,CAAqBZ,GAArB,CAAd;MACA,OAAOgB,KAAP;IACD,CAHD,CAGE,OAAOb,CAAP,EAAU;MACVC,OAAO,CAACC,GAAR,CACE,oCAAoCL,GAApC,GAA0C,uBAA1C,GAAoEM,IAAI,CAACC,SAAL,CAAeJ,CAAf,CADtE;MAGA,OAAO,IAAP;IACD;EACF;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASc,UAAT,CAAoBjB,GAApB,EAAyBgB,KAAzB,EAAgCE,OAAhC,EAAyC;EAC9C,IAAIA,OAAO,KAAKL,SAAZ,IAAyBK,OAAO,KAAK,IAAzC,EAA+C;IAC7CA,OAAO,GAAG,KAAK,EAAL,GAAU,EAApB,CAD6C,CACrB;EACzB;;EAED,IAAMT,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ,CAL8C,CAKtB;;EACxB,IAAMU,QAAQ,GAAGV,GAAG,GAAGS,OAAO,GAAG,IAAjC;;EACA,IAAI;IACFjB,YAAY,CAACC,OAAb,CAAqBF,GAArB,EAA0BgB,KAA1B;IACAf,YAAY,CAACC,OAAb,CAAqBF,GAAG,GAAG,YAA3B,EAAyCmB,QAAzC;EACD,CAHD,CAGE,OAAOhB,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CACE,oCAAoCL,GAApC,GAA0C,qBAA1C,GAAkEM,IAAI,CAACC,SAAL,CAAeJ,CAAf,CADpE;IAGA,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}
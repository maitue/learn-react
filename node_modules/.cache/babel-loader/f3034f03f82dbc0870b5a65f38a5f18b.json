{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketNotificationConfigurationRequest, NotificationConfiguration } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketNotificationConfigurationCommand, serializeAws_restXmlGetBucketNotificationConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns the notification configuration of a bucket.</p>\n *          <p>If notifications are not enabled on the bucket, the operation returns an empty\n *             <code>NotificationConfiguration</code> element.</p>\n *\n *          <p>By default, you must be the bucket owner to read the notification configuration of a\n *          bucket. However, the bucket owner can use a bucket policy to grant permission to other\n *          users to read this configuration with the <code>s3:GetBucketNotification</code>\n *          permission.</p>\n *\n *          <p>For more information about setting and reading the notification configuration on a\n *          bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Setting Up Notification of\n *             Bucket Events</a>. For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies</a>.</p>\n *\n *          <p>The following operation is related to <code>GetBucketNotification</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html\">PutBucketNotification</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar GetBucketNotificationConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetBucketNotificationConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetBucketNotificationConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetBucketNotificationConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketNotificationConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketNotificationConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: NotificationConfiguration.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetBucketNotificationConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context);\n  };\n\n  GetBucketNotificationConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context);\n  };\n\n  return GetBucketNotificationConfigurationCommand;\n}($Command);\n\nexport { GetBucketNotificationConfigurationCommand };","map":null,"metadata":{},"sourceType":"module"}
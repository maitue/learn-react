{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { matches } from './matches';\nimport { parents } from './parents';\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\n\nexport function closest(element, selector, shouldCheckSelf) {\n  if (shouldCheckSelf === void 0) {\n    shouldCheckSelf = false;\n  }\n\n  if (!(element && element.nodeType === 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent_1; parent_1 = parentElements[i]; i++) {\n    if (matches(parent_1, selector)) return parent_1;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n/**\n * @internal\n */\n\nexport function prepareRequest(request) {\n  var e_1, _a; // Create a clone of the request object that does not clone the body\n\n\n  request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n\n  try {\n    for (var _b = __values(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n\n      if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n        delete request.headers[headerName];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return request;\n}","map":null,"metadata":{},"sourceType":"module"}
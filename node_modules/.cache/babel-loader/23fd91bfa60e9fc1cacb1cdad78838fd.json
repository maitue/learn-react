{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1CreateAppCommand = function serializeAws_restJson1CreateAppCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps\";\n\n          if (input.CreateApplicationRequest !== undefined) {\n            body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateCampaignCommand = function serializeAws_restJson1CreateCampaignCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailTemplateCommand = function serializeAws_restJson1CreateEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateExportJobCommand = function serializeAws_restJson1CreateExportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ExportJobRequest !== undefined) {\n            body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateImportJobCommand = function serializeAws_restJson1CreateImportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ImportJobRequest !== undefined) {\n            body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateJourneyCommand = function serializeAws_restJson1CreateJourneyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreatePushTemplateCommand = function serializeAws_restJson1CreatePushTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateRecommenderConfigurationCommand = function serializeAws_restJson1CreateRecommenderConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders\";\n\n          if (input.CreateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSegmentCommand = function serializeAws_restJson1CreateSegmentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSmsTemplateCommand = function serializeAws_restJson1CreateSmsTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateVoiceTemplateCommand = function serializeAws_restJson1CreateVoiceTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAdmChannelCommand = function serializeAws_restJson1DeleteAdmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsChannelCommand = function serializeAws_restJson1DeleteApnsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsSandboxChannelCommand = function serializeAws_restJson1DeleteApnsSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipChannelCommand = function serializeAws_restJson1DeleteApnsVoipChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAppCommand = function serializeAws_restJson1DeleteAppCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteBaiduChannelCommand = function serializeAws_restJson1DeleteBaiduChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteCampaignCommand = function serializeAws_restJson1DeleteCampaignCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailChannelCommand = function serializeAws_restJson1DeleteEmailChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailTemplateCommand = function serializeAws_restJson1DeleteEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEndpointCommand = function serializeAws_restJson1DeleteEndpointCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEventStreamCommand = function serializeAws_restJson1DeleteEventStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteGcmChannelCommand = function serializeAws_restJson1DeleteGcmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteJourneyCommand = function serializeAws_restJson1DeleteJourneyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeletePushTemplateCommand = function serializeAws_restJson1DeletePushTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteRecommenderConfigurationCommand = function serializeAws_restJson1DeleteRecommenderConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSegmentCommand = function serializeAws_restJson1DeleteSegmentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsChannelCommand = function serializeAws_restJson1DeleteSmsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsTemplateCommand = function serializeAws_restJson1DeleteSmsTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteUserEndpointsCommand = function serializeAws_restJson1DeleteUserEndpointsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceChannelCommand = function serializeAws_restJson1DeleteVoiceChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceTemplateCommand = function serializeAws_restJson1DeleteVoiceTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAdmChannelCommand = function serializeAws_restJson1GetAdmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsChannelCommand = function serializeAws_restJson1GetApnsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsSandboxChannelCommand = function serializeAws_restJson1GetApnsSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipChannelCommand = function serializeAws_restJson1GetApnsVoipChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipSandboxChannelCommand = function serializeAws_restJson1GetApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppCommand = function serializeAws_restJson1GetAppCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationDateRangeKpiCommand = function serializeAws_restJson1GetApplicationDateRangeKpiCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationSettingsCommand = function serializeAws_restJson1GetApplicationSettingsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppsCommand = function serializeAws_restJson1GetAppsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetBaiduChannelCommand = function serializeAws_restJson1GetBaiduChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignCommand = function serializeAws_restJson1GetCampaignCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignActivitiesCommand = function serializeAws_restJson1GetCampaignActivitiesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignDateRangeKpiCommand = function serializeAws_restJson1GetCampaignDateRangeKpiCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignsCommand = function serializeAws_restJson1GetCampaignsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionCommand = function serializeAws_restJson1GetCampaignVersionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionsCommand = function serializeAws_restJson1GetCampaignVersionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetChannelsCommand = function serializeAws_restJson1GetChannelsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailChannelCommand = function serializeAws_restJson1GetEmailChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailTemplateCommand = function serializeAws_restJson1GetEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEndpointCommand = function serializeAws_restJson1GetEndpointCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEventStreamCommand = function serializeAws_restJson1GetEventStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobCommand = function serializeAws_restJson1GetExportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobsCommand = function serializeAws_restJson1GetExportJobsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetGcmChannelCommand = function serializeAws_restJson1GetGcmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobCommand = function serializeAws_restJson1GetImportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobsCommand = function serializeAws_restJson1GetImportJobsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyCommand = function serializeAws_restJson1GetJourneyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyDateRangeKpiCommand = function serializeAws_restJson1GetJourneyDateRangeKpiCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyActivityId !== undefined) {\n            labelValue = input.JourneyActivityId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionMetricsCommand = function serializeAws_restJson1GetJourneyExecutionMetricsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetPushTemplateCommand = function serializeAws_restJson1GetPushTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationCommand = function serializeAws_restJson1GetRecommenderConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationsCommand = function serializeAws_restJson1GetRecommenderConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentCommand = function serializeAws_restJson1GetSegmentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentExportJobsCommand = function serializeAws_restJson1GetSegmentExportJobsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentImportJobsCommand = function serializeAws_restJson1GetSegmentImportJobsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentsCommand = function serializeAws_restJson1GetSegmentsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionCommand = function serializeAws_restJson1GetSegmentVersionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionsCommand = function serializeAws_restJson1GetSegmentVersionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsChannelCommand = function serializeAws_restJson1GetSmsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsTemplateCommand = function serializeAws_restJson1GetSmsTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetUserEndpointsCommand = function serializeAws_restJson1GetUserEndpointsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceChannelCommand = function serializeAws_restJson1GetVoiceChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceTemplateCommand = function serializeAws_restJson1GetVoiceTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListJourneysCommand = function serializeAws_restJson1ListJourneysCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTagsForResourceCommand = function serializeAws_restJson1ListTagsForResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplatesCommand = function serializeAws_restJson1ListTemplatesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates\";\n          query = __assign(__assign(__assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.TemplateType !== undefined && {\n            \"template-type\": input.TemplateType\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplateVersionsCommand = function serializeAws_restJson1ListTemplateVersionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PhoneNumberValidateCommand = function serializeAws_restJson1PhoneNumberValidateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/phone/number/validate\";\n\n          if (input.NumberValidateRequest !== undefined) {\n            body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventsCommand = function serializeAws_restJson1PutEventsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EventsRequest !== undefined) {\n            body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventStreamCommand = function serializeAws_restJson1PutEventStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteEventStream !== undefined) {\n            body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RemoveAttributesCommand = function serializeAws_restJson1RemoveAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.AttributeType !== undefined) {\n            labelValue = input.AttributeType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n          }\n\n          if (input.UpdateAttributesRequest !== undefined) {\n            body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendMessagesCommand = function serializeAws_restJson1SendMessagesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.MessageRequest !== undefined) {\n            body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendUsersMessagesCommand = function serializeAws_restJson1SendUsersMessagesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SendUsersMessageRequest !== undefined) {\n            body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1TagResourceCommand = function serializeAws_restJson1TagResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          if (input.TagsModel !== undefined) {\n            body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UntagResourceCommand = function serializeAws_restJson1UntagResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          query = __assign({}, input.TagKeys !== undefined && {\n            tagKeys: (input.TagKeys || []).map(function (_entry) {\n              return _entry;\n            })\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateAdmChannelCommand = function serializeAws_restJson1UpdateAdmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ADMChannelRequest !== undefined) {\n            body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsChannelCommand = function serializeAws_restJson1UpdateApnsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsSandboxChannelCommand = function serializeAws_restJson1UpdateApnsSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipChannelCommand = function serializeAws_restJson1UpdateApnsVoipChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSVoipChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSVoipSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApplicationSettingsCommand = function serializeAws_restJson1UpdateApplicationSettingsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteApplicationSettingsRequest !== undefined) {\n            body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateBaiduChannelCommand = function serializeAws_restJson1UpdateBaiduChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.BaiduChannelRequest !== undefined) {\n            body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateCampaignCommand = function serializeAws_restJson1UpdateCampaignCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailChannelCommand = function serializeAws_restJson1UpdateEmailChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EmailChannelRequest !== undefined) {\n            body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailTemplateCommand = function serializeAws_restJson1UpdateEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointCommand = function serializeAws_restJson1UpdateEndpointCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          if (input.EndpointRequest !== undefined) {\n            body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointsBatchCommand = function serializeAws_restJson1UpdateEndpointsBatchCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointBatchRequest !== undefined) {\n            body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateGcmChannelCommand = function serializeAws_restJson1UpdateGcmChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.GCMChannelRequest !== undefined) {\n            body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyCommand = function serializeAws_restJson1UpdateJourneyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyStateCommand = function serializeAws_restJson1UpdateJourneyStateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.JourneyStateRequest !== undefined) {\n            body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdatePushTemplateCommand = function serializeAws_restJson1UpdatePushTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateRecommenderConfigurationCommand = function serializeAws_restJson1UpdateRecommenderConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          if (input.UpdateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSegmentCommand = function serializeAws_restJson1UpdateSegmentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsChannelCommand = function serializeAws_restJson1UpdateSmsChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SMSChannelRequest !== undefined) {\n            body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsTemplateCommand = function serializeAws_restJson1UpdateSmsTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateTemplateActiveVersionCommand = function serializeAws_restJson1UpdateTemplateActiveVersionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n\n          if (input.TemplateActiveVersionRequest !== undefined) {\n            body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceChannelCommand = function serializeAws_restJson1UpdateVoiceChannelCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.VoiceChannelRequest !== undefined) {\n            body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceTemplateCommand = function serializeAws_restJson1UpdateVoiceTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateAppCommand = function deserializeAws_restJson1CreateAppCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateAppCommandError = function deserializeAws_restJson1CreateAppCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateCampaignCommand = function deserializeAws_restJson1CreateCampaignCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateCampaignCommandError = function deserializeAws_restJson1CreateCampaignCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateEmailTemplateCommand = function deserializeAws_restJson1CreateEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateEmailTemplateCommandError = function deserializeAws_restJson1CreateEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateExportJobCommand = function deserializeAws_restJson1CreateExportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateExportJobCommandError = function deserializeAws_restJson1CreateExportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateImportJobCommand = function deserializeAws_restJson1CreateImportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateImportJobCommandError = function deserializeAws_restJson1CreateImportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateJourneyCommand = function deserializeAws_restJson1CreateJourneyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateJourneyCommandError = function deserializeAws_restJson1CreateJourneyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreatePushTemplateCommand = function deserializeAws_restJson1CreatePushTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreatePushTemplateCommandError = function deserializeAws_restJson1CreatePushTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateRecommenderConfigurationCommand = function deserializeAws_restJson1CreateRecommenderConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateRecommenderConfigurationCommandError = function deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateSegmentCommand = function deserializeAws_restJson1CreateSegmentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateSegmentCommandError = function deserializeAws_restJson1CreateSegmentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateSmsTemplateCommand = function deserializeAws_restJson1CreateSmsTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateSmsTemplateCommandError = function deserializeAws_restJson1CreateSmsTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateVoiceTemplateCommand = function deserializeAws_restJson1CreateVoiceTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateVoiceTemplateCommandError = function deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteAdmChannelCommand = function deserializeAws_restJson1DeleteAdmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteAdmChannelCommandError = function deserializeAws_restJson1DeleteAdmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsChannelCommand = function deserializeAws_restJson1DeleteApnsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsChannelCommandError = function deserializeAws_restJson1DeleteApnsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsSandboxChannelCommand = function deserializeAws_restJson1DeleteApnsSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = function deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsVoipChannelCommand = function deserializeAws_restJson1DeleteApnsVoipChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsVoipChannelCommandError = function deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = function deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteAppCommand = function deserializeAws_restJson1DeleteAppCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteAppCommandError = function deserializeAws_restJson1DeleteAppCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteBaiduChannelCommand = function deserializeAws_restJson1DeleteBaiduChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteBaiduChannelCommandError = function deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteCampaignCommand = function deserializeAws_restJson1DeleteCampaignCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteCampaignCommandError = function deserializeAws_restJson1DeleteCampaignCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailChannelCommand = function deserializeAws_restJson1DeleteEmailChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailChannelCommandError = function deserializeAws_restJson1DeleteEmailChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailTemplateCommand = function deserializeAws_restJson1DeleteEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailTemplateCommandError = function deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEndpointCommand = function deserializeAws_restJson1DeleteEndpointCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEndpointCommandError = function deserializeAws_restJson1DeleteEndpointCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEventStreamCommand = function deserializeAws_restJson1DeleteEventStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEventStreamCommandError = function deserializeAws_restJson1DeleteEventStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteGcmChannelCommand = function deserializeAws_restJson1DeleteGcmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteGcmChannelCommandError = function deserializeAws_restJson1DeleteGcmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteJourneyCommand = function deserializeAws_restJson1DeleteJourneyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteJourneyCommandError = function deserializeAws_restJson1DeleteJourneyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeletePushTemplateCommand = function deserializeAws_restJson1DeletePushTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeletePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeletePushTemplateCommandError = function deserializeAws_restJson1DeletePushTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteRecommenderConfigurationCommand = function deserializeAws_restJson1DeleteRecommenderConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = function deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSegmentCommand = function deserializeAws_restJson1DeleteSegmentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSegmentCommandError = function deserializeAws_restJson1DeleteSegmentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSmsChannelCommand = function deserializeAws_restJson1DeleteSmsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSmsChannelCommandError = function deserializeAws_restJson1DeleteSmsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSmsTemplateCommand = function deserializeAws_restJson1DeleteSmsTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSmsTemplateCommandError = function deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteUserEndpointsCommand = function deserializeAws_restJson1DeleteUserEndpointsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteUserEndpointsCommandError = function deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteVoiceChannelCommand = function deserializeAws_restJson1DeleteVoiceChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteVoiceChannelCommandError = function deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteVoiceTemplateCommand = function deserializeAws_restJson1DeleteVoiceTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteVoiceTemplateCommandError = function deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAdmChannelCommand = function deserializeAws_restJson1GetAdmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAdmChannelCommandError = function deserializeAws_restJson1GetAdmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsChannelCommand = function deserializeAws_restJson1GetApnsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsChannelCommandError = function deserializeAws_restJson1GetApnsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsSandboxChannelCommand = function deserializeAws_restJson1GetApnsSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsSandboxChannelCommandError = function deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsVoipChannelCommand = function deserializeAws_restJson1GetApnsVoipChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsVoipChannelCommandError = function deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = function deserializeAws_restJson1GetApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = function deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAppCommand = function deserializeAws_restJson1GetAppCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAppCommandError = function deserializeAws_restJson1GetAppCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApplicationDateRangeKpiCommand = function deserializeAws_restJson1GetApplicationDateRangeKpiCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = function deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApplicationSettingsCommand = function deserializeAws_restJson1GetApplicationSettingsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApplicationSettingsCommandError = function deserializeAws_restJson1GetApplicationSettingsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAppsCommand = function deserializeAws_restJson1GetAppsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAppsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAppsCommandError = function deserializeAws_restJson1GetAppsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetBaiduChannelCommand = function deserializeAws_restJson1GetBaiduChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetBaiduChannelCommandError = function deserializeAws_restJson1GetBaiduChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignCommand = function deserializeAws_restJson1GetCampaignCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignCommandError = function deserializeAws_restJson1GetCampaignCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignActivitiesCommand = function deserializeAws_restJson1GetCampaignActivitiesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ActivitiesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignActivitiesCommandError = function deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignDateRangeKpiCommand = function deserializeAws_restJson1GetCampaignDateRangeKpiCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = function deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignsCommand = function deserializeAws_restJson1GetCampaignsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignsCommandError = function deserializeAws_restJson1GetCampaignsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignVersionCommand = function deserializeAws_restJson1GetCampaignVersionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignVersionCommandError = function deserializeAws_restJson1GetCampaignVersionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignVersionsCommand = function deserializeAws_restJson1GetCampaignVersionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignVersionsCommandError = function deserializeAws_restJson1GetCampaignVersionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetChannelsCommand = function deserializeAws_restJson1GetChannelsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetChannelsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ChannelsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetChannelsCommandError = function deserializeAws_restJson1GetChannelsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailChannelCommand = function deserializeAws_restJson1GetEmailChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailChannelCommandError = function deserializeAws_restJson1GetEmailChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailTemplateCommand = function deserializeAws_restJson1GetEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailTemplateCommandError = function deserializeAws_restJson1GetEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEndpointCommand = function deserializeAws_restJson1GetEndpointCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEndpointCommandError = function deserializeAws_restJson1GetEndpointCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEventStreamCommand = function deserializeAws_restJson1GetEventStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEventStreamCommandError = function deserializeAws_restJson1GetEventStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetExportJobCommand = function deserializeAws_restJson1GetExportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetExportJobCommandError = function deserializeAws_restJson1GetExportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetExportJobsCommand = function deserializeAws_restJson1GetExportJobsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetExportJobsCommandError = function deserializeAws_restJson1GetExportJobsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetGcmChannelCommand = function deserializeAws_restJson1GetGcmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetGcmChannelCommandError = function deserializeAws_restJson1GetGcmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetImportJobCommand = function deserializeAws_restJson1GetImportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetImportJobCommandError = function deserializeAws_restJson1GetImportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetImportJobsCommand = function deserializeAws_restJson1GetImportJobsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetImportJobsCommandError = function deserializeAws_restJson1GetImportJobsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyCommand = function deserializeAws_restJson1GetJourneyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyCommandError = function deserializeAws_restJson1GetJourneyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyDateRangeKpiCommand = function deserializeAws_restJson1GetJourneyDateRangeKpiCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = function deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionActivityMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = function deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyExecutionMetricsCommand = function deserializeAws_restJson1GetJourneyExecutionMetricsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = function deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetPushTemplateCommand = function deserializeAws_restJson1GetPushTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetPushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PushNotificationTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetPushTemplateCommandError = function deserializeAws_restJson1GetPushTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetRecommenderConfigurationCommand = function deserializeAws_restJson1GetRecommenderConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetRecommenderConfigurationCommandError = function deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetRecommenderConfigurationsCommand = function deserializeAws_restJson1GetRecommenderConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ListRecommenderConfigurationsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetRecommenderConfigurationsCommandError = function deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentCommand = function deserializeAws_restJson1GetSegmentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentCommandError = function deserializeAws_restJson1GetSegmentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentExportJobsCommand = function deserializeAws_restJson1GetSegmentExportJobsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentExportJobsCommandError = function deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentImportJobsCommand = function deserializeAws_restJson1GetSegmentImportJobsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentImportJobsCommandError = function deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentsCommand = function deserializeAws_restJson1GetSegmentsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentsCommandError = function deserializeAws_restJson1GetSegmentsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentVersionCommand = function deserializeAws_restJson1GetSegmentVersionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentVersionCommandError = function deserializeAws_restJson1GetSegmentVersionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentVersionsCommand = function deserializeAws_restJson1GetSegmentVersionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentVersionsCommandError = function deserializeAws_restJson1GetSegmentVersionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSmsChannelCommand = function deserializeAws_restJson1GetSmsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSmsChannelCommandError = function deserializeAws_restJson1GetSmsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSmsTemplateCommand = function deserializeAws_restJson1GetSmsTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSmsTemplateCommandError = function deserializeAws_restJson1GetSmsTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetUserEndpointsCommand = function deserializeAws_restJson1GetUserEndpointsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetUserEndpointsCommandError = function deserializeAws_restJson1GetUserEndpointsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetVoiceChannelCommand = function deserializeAws_restJson1GetVoiceChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetVoiceChannelCommandError = function deserializeAws_restJson1GetVoiceChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetVoiceTemplateCommand = function deserializeAws_restJson1GetVoiceTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetVoiceTemplateCommandError = function deserializeAws_restJson1GetVoiceTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListJourneysCommand = function deserializeAws_restJson1ListJourneysCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListJourneysCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneysResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListJourneysCommandError = function deserializeAws_restJson1ListJourneysCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTagsForResourceCommand = function deserializeAws_restJson1ListTagsForResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTagsForResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagsModel: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTagsForResourceCommandError = function deserializeAws_restJson1ListTagsForResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTemplatesCommand = function deserializeAws_restJson1ListTemplatesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTemplatesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplatesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTemplatesCommandError = function deserializeAws_restJson1ListTemplatesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTemplateVersionsCommand = function deserializeAws_restJson1ListTemplateVersionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTemplateVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplateVersionsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTemplateVersionsCommandError = function deserializeAws_restJson1ListTemplateVersionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PhoneNumberValidateCommand = function deserializeAws_restJson1PhoneNumberValidateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PhoneNumberValidateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NumberValidateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PhoneNumberValidateCommandError = function deserializeAws_restJson1PhoneNumberValidateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEventsCommand = function deserializeAws_restJson1PutEventsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutEventsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEventsCommandError = function deserializeAws_restJson1PutEventsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEventStreamCommand = function deserializeAws_restJson1PutEventStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEventStreamCommandError = function deserializeAws_restJson1PutEventStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RemoveAttributesCommand = function deserializeAws_restJson1RemoveAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1RemoveAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AttributesResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1RemoveAttributesCommandError = function deserializeAws_restJson1RemoveAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendMessagesCommand = function deserializeAws_restJson1SendMessagesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1SendMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendMessagesCommandError = function deserializeAws_restJson1SendMessagesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendUsersMessagesCommand = function deserializeAws_restJson1SendUsersMessagesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1SendUsersMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SendUsersMessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendUsersMessagesCommandError = function deserializeAws_restJson1SendUsersMessagesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1TagResourceCommand = function deserializeAws_restJson1TagResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1TagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TagResourceCommandError = function deserializeAws_restJson1TagResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UntagResourceCommand = function deserializeAws_restJson1UntagResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UntagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UntagResourceCommandError = function deserializeAws_restJson1UntagResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateAdmChannelCommand = function deserializeAws_restJson1UpdateAdmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateAdmChannelCommandError = function deserializeAws_restJson1UpdateAdmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsChannelCommand = function deserializeAws_restJson1UpdateApnsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsChannelCommandError = function deserializeAws_restJson1UpdateApnsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsSandboxChannelCommand = function deserializeAws_restJson1UpdateApnsSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = function deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsVoipChannelCommand = function deserializeAws_restJson1UpdateApnsVoipChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsVoipChannelCommandError = function deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = function deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApplicationSettingsCommand = function deserializeAws_restJson1UpdateApplicationSettingsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApplicationSettingsCommandError = function deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateBaiduChannelCommand = function deserializeAws_restJson1UpdateBaiduChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateBaiduChannelCommandError = function deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateCampaignCommand = function deserializeAws_restJson1UpdateCampaignCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateCampaignCommandError = function deserializeAws_restJson1UpdateCampaignCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailChannelCommand = function deserializeAws_restJson1UpdateEmailChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailChannelCommandError = function deserializeAws_restJson1UpdateEmailChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailTemplateCommand = function deserializeAws_restJson1UpdateEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailTemplateCommandError = function deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEndpointCommand = function deserializeAws_restJson1UpdateEndpointCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEndpointCommandError = function deserializeAws_restJson1UpdateEndpointCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEndpointsBatchCommand = function deserializeAws_restJson1UpdateEndpointsBatchCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEndpointsBatchCommandError = function deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateGcmChannelCommand = function deserializeAws_restJson1UpdateGcmChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateGcmChannelCommandError = function deserializeAws_restJson1UpdateGcmChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateJourneyCommand = function deserializeAws_restJson1UpdateJourneyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateJourneyCommandError = function deserializeAws_restJson1UpdateJourneyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateJourneyStateCommand = function deserializeAws_restJson1UpdateJourneyStateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateJourneyStateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateJourneyStateCommandError = function deserializeAws_restJson1UpdateJourneyStateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdatePushTemplateCommand = function deserializeAws_restJson1UpdatePushTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdatePushTemplateCommandError = function deserializeAws_restJson1UpdatePushTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateRecommenderConfigurationCommand = function deserializeAws_restJson1UpdateRecommenderConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = function deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSegmentCommand = function deserializeAws_restJson1UpdateSegmentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSegmentCommandError = function deserializeAws_restJson1UpdateSegmentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSmsChannelCommand = function deserializeAws_restJson1UpdateSmsChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSmsChannelCommandError = function deserializeAws_restJson1UpdateSmsChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSmsTemplateCommand = function deserializeAws_restJson1UpdateSmsTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSmsTemplateCommandError = function deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateTemplateActiveVersionCommand = function deserializeAws_restJson1UpdateTemplateActiveVersionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = function deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateVoiceChannelCommand = function deserializeAws_restJson1UpdateVoiceChannelCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateVoiceChannelCommandError = function deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateVoiceTemplateCommand = function deserializeAws_restJson1UpdateVoiceTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateVoiceTemplateCommandError = function deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ForbiddenExceptionResponse = function deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ForbiddenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerErrorExceptionResponse = function deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalServerErrorException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1MethodNotAllowedExceptionResponse = function deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MethodNotAllowedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PayloadTooLargeExceptionResponse = function deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"PayloadTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1TooManyRequestsExceptionResponse = function deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1Activity = function serializeAws_restJson1Activity(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CUSTOM !== undefined && input.CUSTOM !== null && {\n    CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context)\n  }), input.ConditionalSplit !== undefined && input.ConditionalSplit !== null && {\n    ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EMAIL !== undefined && input.EMAIL !== null && {\n    EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context)\n  }), input.Holdout !== undefined && input.Holdout !== null && {\n    Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context)\n  }), input.MultiCondition !== undefined && input.MultiCondition !== null && {\n    MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context)\n  }), input.PUSH !== undefined && input.PUSH !== null && {\n    PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context)\n  }), input.RandomSplit !== undefined && input.RandomSplit !== null && {\n    RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context)\n  }), input.SMS !== undefined && input.SMS !== null && {\n    SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context)\n  }), input.Wait !== undefined && input.Wait !== null && {\n    Wait: serializeAws_restJson1WaitActivity(input.Wait, context)\n  });\n};\n\nvar serializeAws_restJson1AddressConfiguration = function serializeAws_restJson1AddressConfiguration(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\n\nvar serializeAws_restJson1ADMChannelRequest = function serializeAws_restJson1ADMChannelRequest(input, context) {\n  return __assign(__assign(__assign({}, input.ClientId !== undefined && input.ClientId !== null && {\n    ClientId: input.ClientId\n  }), input.ClientSecret !== undefined && input.ClientSecret !== null && {\n    ClientSecret: input.ClientSecret\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1ADMMessage = function serializeAws_restJson1ADMMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ConsolidationKey !== undefined && input.ConsolidationKey !== null && {\n    ConsolidationKey: input.ConsolidationKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && {\n    ExpiresAfter: input.ExpiresAfter\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.MD5 !== undefined && input.MD5 !== null && {\n    MD5: input.MD5\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1AndroidPushNotificationTemplate = function serializeAws_restJson1AndroidPushNotificationTemplate(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSChannelRequest = function serializeAws_restJson1APNSChannelRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSMessage = function serializeAws_restJson1APNSMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.APNSPushType !== undefined && input.APNSPushType !== null && {\n    APNSPushType: input.APNSPushType\n  }), input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Badge !== undefined && input.Badge !== null && {\n    Badge: input.Badge\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Category !== undefined && input.Category !== null && {\n    Category: input.Category\n  }), input.CollapseId !== undefined && input.CollapseId !== null && {\n    CollapseId: input.CollapseId\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.PreferredAuthenticationMethod !== undefined && input.PreferredAuthenticationMethod !== null && {\n    PreferredAuthenticationMethod: input.PreferredAuthenticationMethod\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.ThreadId !== undefined && input.ThreadId !== null && {\n    ThreadId: input.ThreadId\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSPushNotificationTemplate = function serializeAws_restJson1APNSPushNotificationTemplate(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSSandboxChannelRequest = function serializeAws_restJson1APNSSandboxChannelRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSVoipChannelRequest = function serializeAws_restJson1APNSVoipChannelRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSVoipSandboxChannelRequest = function serializeAws_restJson1APNSVoipSandboxChannelRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1AttributeDimension = function serializeAws_restJson1AttributeDimension(input, context) {\n  return __assign(__assign({}, input.AttributeType !== undefined && input.AttributeType !== null && {\n    AttributeType: input.AttributeType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\n\nvar serializeAws_restJson1BaiduChannelRequest = function serializeAws_restJson1BaiduChannelRequest(input, context) {\n  return __assign(__assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SecretKey !== undefined && input.SecretKey !== null && {\n    SecretKey: input.SecretKey\n  });\n};\n\nvar serializeAws_restJson1BaiduMessage = function serializeAws_restJson1BaiduMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1CampaignCustomMessage = function serializeAws_restJson1CampaignCustomMessage(input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1CampaignEmailMessage = function serializeAws_restJson1CampaignEmailMessage(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.HtmlBody !== undefined && input.HtmlBody !== null && {\n    HtmlBody: input.HtmlBody\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  });\n};\n\nvar serializeAws_restJson1CampaignEventFilter = function serializeAws_restJson1CampaignEventFilter(input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\n\nvar serializeAws_restJson1CampaignHook = function serializeAws_restJson1CampaignHook(input, context) {\n  return __assign(__assign(__assign({}, input.LambdaFunctionName !== undefined && input.LambdaFunctionName !== null && {\n    LambdaFunctionName: input.LambdaFunctionName\n  }), input.Mode !== undefined && input.Mode !== null && {\n    Mode: input.Mode\n  }), input.WebUrl !== undefined && input.WebUrl !== null && {\n    WebUrl: input.WebUrl\n  });\n};\n\nvar serializeAws_restJson1CampaignLimits = function serializeAws_restJson1CampaignLimits(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Daily !== undefined && input.Daily !== null && {\n    Daily: input.Daily\n  }), input.MaximumDuration !== undefined && input.MaximumDuration !== null && {\n    MaximumDuration: input.MaximumDuration\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  }), input.Total !== undefined && input.Total !== null && {\n    Total: input.Total\n  });\n};\n\nvar serializeAws_restJson1CampaignSmsMessage = function serializeAws_restJson1CampaignSmsMessage(input, context) {\n  return __assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\n\nvar serializeAws_restJson1Condition = function serializeAws_restJson1Condition(input, context) {\n  return __assign(__assign({}, input.Conditions !== undefined && input.Conditions !== null && {\n    Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context)\n  }), input.Operator !== undefined && input.Operator !== null && {\n    Operator: input.Operator\n  });\n};\n\nvar serializeAws_restJson1ConditionalSplitActivity = function serializeAws_restJson1ConditionalSplitActivity(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1Condition(input.Condition, context)\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  }), input.FalseActivity !== undefined && input.FalseActivity !== null && {\n    FalseActivity: input.FalseActivity\n  }), input.TrueActivity !== undefined && input.TrueActivity !== null && {\n    TrueActivity: input.TrueActivity\n  });\n};\n\nvar serializeAws_restJson1CreateApplicationRequest = function serializeAws_restJson1CreateApplicationRequest(input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1CreateRecommenderConfigurationShape = function serializeAws_restJson1CreateRecommenderConfigurationShape(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\n\nvar serializeAws_restJson1CustomDeliveryConfiguration = function serializeAws_restJson1CustomDeliveryConfiguration(input, context) {\n  return __assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  });\n};\n\nvar serializeAws_restJson1CustomMessageActivity = function serializeAws_restJson1CustomMessageActivity(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  }), input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1DefaultMessage = function serializeAws_restJson1DefaultMessage(input, context) {\n  return __assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1DefaultPushNotificationMessage = function serializeAws_restJson1DefaultPushNotificationMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1DefaultPushNotificationTemplate = function serializeAws_restJson1DefaultPushNotificationTemplate(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1DirectMessageConfiguration = function serializeAws_restJson1DirectMessageConfiguration(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context)\n  }), input.DefaultPushNotificationMessage !== undefined && input.DefaultPushNotificationMessage !== null && {\n    DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(input.DefaultPushNotificationMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context)\n  }), input.VoiceMessage !== undefined && input.VoiceMessage !== null && {\n    VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context)\n  });\n};\n\nvar serializeAws_restJson1EmailChannelRequest = function serializeAws_restJson1EmailChannelRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ConfigurationSet !== undefined && input.ConfigurationSet !== null && {\n    ConfigurationSet: input.ConfigurationSet\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.Identity !== undefined && input.Identity !== null && {\n    Identity: input.Identity\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\n\nvar serializeAws_restJson1EmailMessage = function serializeAws_restJson1EmailMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FeedbackForwardingAddress !== undefined && input.FeedbackForwardingAddress !== null && {\n    FeedbackForwardingAddress: input.FeedbackForwardingAddress\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.RawEmail !== undefined && input.RawEmail !== null && {\n    RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context)\n  }), input.ReplyToAddresses !== undefined && input.ReplyToAddresses !== null && {\n    ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context)\n  }), input.SimpleEmail !== undefined && input.SimpleEmail !== null && {\n    SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context)\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1EmailMessageActivity = function serializeAws_restJson1EmailMessageActivity(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1EmailTemplateRequest = function serializeAws_restJson1EmailTemplateRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: input.HtmlPart\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: input.Subject\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: input.TextPart\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointBatchItem = function serializeAws_restJson1EndpointBatchItem(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointBatchRequest = function serializeAws_restJson1EndpointBatchRequest(input, context) {\n  return __assign({}, input.Item !== undefined && input.Item !== null && {\n    Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointDemographic = function serializeAws_restJson1EndpointDemographic(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: input.AppVersion\n  }), input.Locale !== undefined && input.Locale !== null && {\n    Locale: input.Locale\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: input.Make\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: input.Model\n  }), input.ModelVersion !== undefined && input.ModelVersion !== null && {\n    ModelVersion: input.ModelVersion\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: input.Platform\n  }), input.PlatformVersion !== undefined && input.PlatformVersion !== null && {\n    PlatformVersion: input.PlatformVersion\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1EndpointLocation = function serializeAws_restJson1EndpointLocation(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.City !== undefined && input.City !== null && {\n    City: input.City\n  }), input.Country !== undefined && input.Country !== null && {\n    Country: input.Country\n  }), input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  }), input.PostalCode !== undefined && input.PostalCode !== null && {\n    PostalCode: input.PostalCode\n  }), input.Region !== undefined && input.Region !== null && {\n    Region: input.Region\n  });\n};\n\nvar serializeAws_restJson1EndpointRequest = function serializeAws_restJson1EndpointRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointSendConfiguration = function serializeAws_restJson1EndpointSendConfiguration(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\n\nvar serializeAws_restJson1EndpointUser = function serializeAws_restJson1EndpointUser(input, context) {\n  return __assign(__assign({}, input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context)\n  }), input.UserId !== undefined && input.UserId !== null && {\n    UserId: input.UserId\n  });\n};\n\nvar serializeAws_restJson1Event = function serializeAws_restJson1Event(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppPackageName !== undefined && input.AppPackageName !== null && {\n    AppPackageName: input.AppPackageName\n  }), input.AppTitle !== undefined && input.AppTitle !== null && {\n    AppTitle: input.AppTitle\n  }), input.AppVersionCode !== undefined && input.AppVersionCode !== null && {\n    AppVersionCode: input.AppVersionCode\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.ClientSdkVersion !== undefined && input.ClientSdkVersion !== null && {\n    ClientSdkVersion: input.ClientSdkVersion\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: input.EventType\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.SdkName !== undefined && input.SdkName !== null && {\n    SdkName: input.SdkName\n  }), input.Session !== undefined && input.Session !== null && {\n    Session: serializeAws_restJson1Session(input.Session, context)\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: input.Timestamp\n  });\n};\n\nvar serializeAws_restJson1EventCondition = function serializeAws_restJson1EventCondition(input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.MessageActivity !== undefined && input.MessageActivity !== null && {\n    MessageActivity: input.MessageActivity\n  });\n};\n\nvar serializeAws_restJson1EventDimensions = function serializeAws_restJson1EventDimensions(input, context) {\n  return __assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: serializeAws_restJson1SetDimension(input.EventType, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  });\n};\n\nvar serializeAws_restJson1EventFilter = function serializeAws_restJson1EventFilter(input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\n\nvar serializeAws_restJson1EventsBatch = function serializeAws_restJson1EventsBatch(input, context) {\n  return __assign(__assign({}, input.Endpoint !== undefined && input.Endpoint !== null && {\n    Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context)\n  }), input.Events !== undefined && input.Events !== null && {\n    Events: serializeAws_restJson1MapOfEvent(input.Events, context)\n  });\n};\n\nvar serializeAws_restJson1EventsRequest = function serializeAws_restJson1EventsRequest(input, context) {\n  return __assign({}, input.BatchItem !== undefined && input.BatchItem !== null && {\n    BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context)\n  });\n};\n\nvar serializeAws_restJson1EventStartCondition = function serializeAws_restJson1EventStartCondition(input, context) {\n  return __assign(__assign({}, input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\n\nvar serializeAws_restJson1ExportJobRequest = function serializeAws_restJson1ExportJobRequest(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && {\n    S3UrlPrefix: input.S3UrlPrefix\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  });\n};\n\nvar serializeAws_restJson1GCMChannelRequest = function serializeAws_restJson1GCMChannelRequest(input, context) {\n  return __assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1GCMMessage = function serializeAws_restJson1GCMMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.CollapseKey !== undefined && input.CollapseKey !== null && {\n    CollapseKey: input.CollapseKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.RestrictedPackageName !== undefined && input.RestrictedPackageName !== null && {\n    RestrictedPackageName: input.RestrictedPackageName\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1GPSCoordinates = function serializeAws_restJson1GPSCoordinates(input, context) {\n  return __assign(__assign({}, input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  });\n};\n\nvar serializeAws_restJson1GPSPointDimension = function serializeAws_restJson1GPSPointDimension(input, context) {\n  return __assign(__assign({}, input.Coordinates !== undefined && input.Coordinates !== null && {\n    Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context)\n  }), input.RangeInKilometers !== undefined && input.RangeInKilometers !== null && {\n    RangeInKilometers: input.RangeInKilometers\n  });\n};\n\nvar serializeAws_restJson1HoldoutActivity = function serializeAws_restJson1HoldoutActivity(input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\n\nvar serializeAws_restJson1ImportJobRequest = function serializeAws_restJson1ImportJobRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefineSegment !== undefined && input.DefineSegment !== null && {\n    DefineSegment: input.DefineSegment\n  }), input.ExternalId !== undefined && input.ExternalId !== null && {\n    ExternalId: input.ExternalId\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.RegisterEndpoints !== undefined && input.RegisterEndpoints !== null && {\n    RegisterEndpoints: input.RegisterEndpoints\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3Url !== undefined && input.S3Url !== null && {\n    S3Url: input.S3Url\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentName !== undefined && input.SegmentName !== null && {\n    SegmentName: input.SegmentName\n  });\n};\n\nvar serializeAws_restJson1JourneyCustomMessage = function serializeAws_restJson1JourneyCustomMessage(input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1JourneyEmailMessage = function serializeAws_restJson1JourneyEmailMessage(input, context) {\n  return __assign({}, input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  });\n};\n\nvar serializeAws_restJson1JourneyLimits = function serializeAws_restJson1JourneyLimits(input, context) {\n  return __assign(__assign(__assign({}, input.DailyCap !== undefined && input.DailyCap !== null && {\n    DailyCap: input.DailyCap\n  }), input.EndpointReentryCap !== undefined && input.EndpointReentryCap !== null && {\n    EndpointReentryCap: input.EndpointReentryCap\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  });\n};\n\nvar serializeAws_restJson1JourneyPushMessage = function serializeAws_restJson1JourneyPushMessage(input, context) {\n  return __assign({}, input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  });\n};\n\nvar serializeAws_restJson1JourneySchedule = function serializeAws_restJson1JourneySchedule(input, context) {\n  return __assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1JourneySMSMessage = function serializeAws_restJson1JourneySMSMessage(input, context) {\n  return __assign(__assign({}, input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\n\nvar serializeAws_restJson1JourneyStateRequest = function serializeAws_restJson1JourneyStateRequest(input, context) {\n  return __assign({}, input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\n\nvar serializeAws_restJson1ListOf__EndpointTypesElement = function serializeAws_restJson1ListOf__EndpointTypesElement(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1ListOf__string = function serializeAws_restJson1ListOf__string(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1ListOfEndpointBatchItem = function serializeAws_restJson1ListOfEndpointBatchItem(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1EndpointBatchItem(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfMultiConditionalBranch = function serializeAws_restJson1ListOfMultiConditionalBranch(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfRandomSplitEntry = function serializeAws_restJson1ListOfRandomSplitEntry(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentDimensions = function serializeAws_restJson1ListOfSegmentDimensions(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentGroup = function serializeAws_restJson1ListOfSegmentGroup(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentReference = function serializeAws_restJson1ListOfSegmentReference(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentReference(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSimpleCondition = function serializeAws_restJson1ListOfSimpleCondition(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfWriteTreatmentResource = function serializeAws_restJson1ListOfWriteTreatmentResource(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1WriteTreatmentResource(entry, context);\n  });\n};\n\nvar serializeAws_restJson1MapOf__double = function serializeAws_restJson1MapOf__double(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOf__string = function serializeAws_restJson1MapOf__string(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfActivity = function serializeAws_restJson1MapOfActivity(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfAddressConfiguration = function serializeAws_restJson1MapOfAddressConfiguration(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AddressConfiguration(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfAttributeDimension = function serializeAws_restJson1MapOfAttributeDimension(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEndpointSendConfiguration = function serializeAws_restJson1MapOfEndpointSendConfiguration(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EndpointSendConfiguration(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEvent = function serializeAws_restJson1MapOfEvent(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Event(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEventsBatch = function serializeAws_restJson1MapOfEventsBatch(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EventsBatch(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfListOf__string = function serializeAws_restJson1MapOfListOf__string(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfMetricDimension = function serializeAws_restJson1MapOfMetricDimension(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1Message = function serializeAws_restJson1Message(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageSmallIconUrl !== undefined && input.ImageSmallIconUrl !== null && {\n    ImageSmallIconUrl: input.ImageSmallIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.JsonBody !== undefined && input.JsonBody !== null && {\n    JsonBody: input.JsonBody\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1MessageConfiguration = function serializeAws_restJson1MessageConfiguration(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context)\n  }), input.CustomMessage !== undefined && input.CustomMessage !== null && {\n    CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context)\n  });\n};\n\nvar serializeAws_restJson1MessageRequest = function serializeAws_restJson1MessageRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Addresses !== undefined && input.Addresses !== null && {\n    Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context)\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.Endpoints !== undefined && input.Endpoints !== null && {\n    Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  });\n};\n\nvar serializeAws_restJson1MetricDimension = function serializeAws_restJson1MetricDimension(input, context) {\n  return __assign(__assign({}, input.ComparisonOperator !== undefined && input.ComparisonOperator !== null && {\n    ComparisonOperator: input.ComparisonOperator\n  }), input.Value !== undefined && input.Value !== null && {\n    Value: input.Value\n  });\n};\n\nvar serializeAws_restJson1MultiConditionalBranch = function serializeAws_restJson1MultiConditionalBranch(input, context) {\n  return __assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1SimpleCondition(input.Condition, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  });\n};\n\nvar serializeAws_restJson1MultiConditionalSplitActivity = function serializeAws_restJson1MultiConditionalSplitActivity(input, context) {\n  return __assign(__assign(__assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context)\n  }), input.DefaultActivity !== undefined && input.DefaultActivity !== null && {\n    DefaultActivity: input.DefaultActivity\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  });\n};\n\nvar serializeAws_restJson1NumberValidateRequest = function serializeAws_restJson1NumberValidateRequest(input, context) {\n  return __assign(__assign({}, input.IsoCountryCode !== undefined && input.IsoCountryCode !== null && {\n    IsoCountryCode: input.IsoCountryCode\n  }), input.PhoneNumber !== undefined && input.PhoneNumber !== null && {\n    PhoneNumber: input.PhoneNumber\n  });\n};\n\nvar serializeAws_restJson1PublicEndpoint = function serializeAws_restJson1PublicEndpoint(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1PushMessageActivity = function serializeAws_restJson1PushMessageActivity(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1PushNotificationTemplateRequest = function serializeAws_restJson1PushNotificationTemplateRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADM !== undefined && input.ADM !== null && {\n    ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context)\n  }), input.APNS !== undefined && input.APNS !== null && {\n    APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context)\n  }), input.Baidu !== undefined && input.Baidu !== null && {\n    Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context)\n  }), input.Default !== undefined && input.Default !== null && {\n    Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context)\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.GCM !== undefined && input.GCM !== null && {\n    GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context)\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1QuietTime = function serializeAws_restJson1QuietTime(input, context) {\n  return __assign(__assign({}, input.End !== undefined && input.End !== null && {\n    End: input.End\n  }), input.Start !== undefined && input.Start !== null && {\n    Start: input.Start\n  });\n};\n\nvar serializeAws_restJson1RandomSplitActivity = function serializeAws_restJson1RandomSplitActivity(input, context) {\n  return __assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context)\n  });\n};\n\nvar serializeAws_restJson1RandomSplitEntry = function serializeAws_restJson1RandomSplitEntry(input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\n\nvar serializeAws_restJson1RawEmail = function serializeAws_restJson1RawEmail(input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  });\n};\n\nvar serializeAws_restJson1RecencyDimension = function serializeAws_restJson1RecencyDimension(input, context) {\n  return __assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.RecencyType !== undefined && input.RecencyType !== null && {\n    RecencyType: input.RecencyType\n  });\n};\n\nvar serializeAws_restJson1Schedule = function serializeAws_restJson1Schedule(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime\n  }), input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context)\n  }), input.Frequency !== undefined && input.Frequency !== null && {\n    Frequency: input.Frequency\n  }), input.IsLocalTime !== undefined && input.IsLocalTime !== null && {\n    IsLocalTime: input.IsLocalTime\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1SegmentBehaviors = function serializeAws_restJson1SegmentBehaviors(input, context) {\n  return __assign({}, input.Recency !== undefined && input.Recency !== null && {\n    Recency: serializeAws_restJson1RecencyDimension(input.Recency, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentCondition = function serializeAws_restJson1SegmentCondition(input, context) {\n  return __assign({}, input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\n\nvar serializeAws_restJson1SegmentDemographics = function serializeAws_restJson1SegmentDemographics(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context)\n  }), input.Channel !== undefined && input.Channel !== null && {\n    Channel: serializeAws_restJson1SetDimension(input.Channel, context)\n  }), input.DeviceType !== undefined && input.DeviceType !== null && {\n    DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context)\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: serializeAws_restJson1SetDimension(input.Make, context)\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: serializeAws_restJson1SetDimension(input.Model, context)\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: serializeAws_restJson1SetDimension(input.Platform, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentDimensions = function serializeAws_restJson1SegmentDimensions(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.Behavior !== undefined && input.Behavior !== null && {\n    Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context)\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context)\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1SegmentLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  }), input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentGroup = function serializeAws_restJson1SegmentGroup(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context)\n  }), input.SourceSegments !== undefined && input.SourceSegments !== null && {\n    SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context)\n  }), input.SourceType !== undefined && input.SourceType !== null && {\n    SourceType: input.SourceType\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_restJson1SegmentGroupList = function serializeAws_restJson1SegmentGroupList(input, context) {\n  return __assign(__assign({}, input.Groups !== undefined && input.Groups !== null && {\n    Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context)\n  }), input.Include !== undefined && input.Include !== null && {\n    Include: input.Include\n  });\n};\n\nvar serializeAws_restJson1SegmentLocation = function serializeAws_restJson1SegmentLocation(input, context) {\n  return __assign(__assign({}, input.Country !== undefined && input.Country !== null && {\n    Country: serializeAws_restJson1SetDimension(input.Country, context)\n  }), input.GPSPoint !== undefined && input.GPSPoint !== null && {\n    GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentReference = function serializeAws_restJson1SegmentReference(input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1SendUsersMessageRequest = function serializeAws_restJson1SendUsersMessageRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  }), input.Users !== undefined && input.Users !== null && {\n    Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context)\n  });\n};\n\nvar serializeAws_restJson1Session = function serializeAws_restJson1Session(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.StartTimestamp !== undefined && input.StartTimestamp !== null && {\n    StartTimestamp: input.StartTimestamp\n  }), input.StopTimestamp !== undefined && input.StopTimestamp !== null && {\n    StopTimestamp: input.StopTimestamp\n  });\n};\n\nvar serializeAws_restJson1SetDimension = function serializeAws_restJson1SetDimension(input, context) {\n  return __assign(__assign({}, input.DimensionType !== undefined && input.DimensionType !== null && {\n    DimensionType: input.DimensionType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleCondition = function serializeAws_restJson1SimpleCondition(input, context) {\n  return __assign(__assign(__assign({}, input.EventCondition !== undefined && input.EventCondition !== null && {\n    EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context)\n  }), input.SegmentCondition !== undefined && input.SegmentCondition !== null && {\n    SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context)\n  }), input.SegmentDimensions !== undefined && input.SegmentDimensions !== null && {\n    segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleEmail = function serializeAws_restJson1SimpleEmail(input, context) {\n  return __assign(__assign(__assign({}, input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context)\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context)\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleEmailPart = function serializeAws_restJson1SimpleEmailPart(input, context) {\n  return __assign(__assign({}, input.Charset !== undefined && input.Charset !== null && {\n    Charset: input.Charset\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1SMSChannelRequest = function serializeAws_restJson1SMSChannelRequest(input, context) {\n  return __assign(__assign(__assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.ShortCode !== undefined && input.ShortCode !== null && {\n    ShortCode: input.ShortCode\n  });\n};\n\nvar serializeAws_restJson1SMSMessage = function serializeAws_restJson1SMSMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Keyword !== undefined && input.Keyword !== null && {\n    Keyword: input.Keyword\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1SMSMessageActivity = function serializeAws_restJson1SMSMessageActivity(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1SMSTemplateRequest = function serializeAws_restJson1SMSTemplateRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1StartCondition = function serializeAws_restJson1StartCondition(input, context) {\n  return __assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EventStartCondition !== undefined && input.EventStartCondition !== null && {\n    EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context)\n  }), input.SegmentStartCondition !== undefined && input.SegmentStartCondition !== null && {\n    SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context)\n  });\n};\n\nvar serializeAws_restJson1TagsModel = function serializeAws_restJson1TagsModel(input, context) {\n  return __assign({}, input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1Template = function serializeAws_restJson1Template(input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1TemplateActiveVersionRequest = function serializeAws_restJson1TemplateActiveVersionRequest(input, context) {\n  return __assign({}, input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1TemplateConfiguration = function serializeAws_restJson1TemplateConfiguration(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.EmailTemplate !== undefined && input.EmailTemplate !== null && {\n    EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context)\n  }), input.PushTemplate !== undefined && input.PushTemplate !== null && {\n    PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context)\n  }), input.SMSTemplate !== undefined && input.SMSTemplate !== null && {\n    SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context)\n  }), input.VoiceTemplate !== undefined && input.VoiceTemplate !== null && {\n    VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context)\n  });\n};\n\nvar serializeAws_restJson1UpdateAttributesRequest = function serializeAws_restJson1UpdateAttributesRequest(input, context) {\n  return __assign({}, input.Blacklist !== undefined && input.Blacklist !== null && {\n    Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context)\n  });\n};\n\nvar serializeAws_restJson1UpdateRecommenderConfigurationShape = function serializeAws_restJson1UpdateRecommenderConfigurationShape(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\n\nvar serializeAws_restJson1VoiceChannelRequest = function serializeAws_restJson1VoiceChannelRequest(input, context) {\n  return __assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1VoiceMessage = function serializeAws_restJson1VoiceMessage(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  });\n};\n\nvar serializeAws_restJson1VoiceTemplateRequest = function serializeAws_restJson1VoiceTemplateRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WaitActivity = function serializeAws_restJson1WaitActivity(input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.WaitTime !== undefined && input.WaitTime !== null && {\n    WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context)\n  });\n};\n\nvar serializeAws_restJson1WaitTime = function serializeAws_restJson1WaitTime(input, context) {\n  return __assign(__assign({}, input.WaitFor !== undefined && input.WaitFor !== null && {\n    WaitFor: input.WaitFor\n  }), input.WaitUntil !== undefined && input.WaitUntil !== null && {\n    WaitUntil: input.WaitUntil\n  });\n};\n\nvar serializeAws_restJson1WriteApplicationSettingsRequest = function serializeAws_restJson1WriteApplicationSettingsRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.CampaignHook !== undefined && input.CampaignHook !== null && {\n    CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context)\n  }), input.CloudWatchMetricsEnabled !== undefined && input.CloudWatchMetricsEnabled !== null && {\n    CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled\n  }), input.EventTaggingEnabled !== undefined && input.EventTaggingEnabled !== null && {\n    EventTaggingEnabled: input.EventTaggingEnabled\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  });\n};\n\nvar serializeAws_restJson1WriteCampaignRequest = function serializeAws_restJson1WriteCampaignRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AdditionalTreatments !== undefined && input.AdditionalTreatments !== null && {\n    AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context)\n  }), input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.HoldoutPercent !== undefined && input.HoldoutPercent !== null && {\n    HoldoutPercent: input.HoldoutPercent\n  }), input.Hook !== undefined && input.Hook !== null && {\n    Hook: serializeAws_restJson1CampaignHook(input.Hook, context)\n  }), input.IsPaused !== undefined && input.IsPaused !== null && {\n    IsPaused: input.IsPaused\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WriteEventStream = function serializeAws_restJson1WriteEventStream(input, context) {\n  return __assign(__assign({}, input.DestinationStreamArn !== undefined && input.DestinationStreamArn !== null && {\n    DestinationStreamArn: input.DestinationStreamArn\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\n\nvar serializeAws_restJson1WriteJourneyRequest = function serializeAws_restJson1WriteJourneyRequest(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Activities !== undefined && input.Activities !== null && {\n    Activities: serializeAws_restJson1MapOfActivity(input.Activities, context)\n  }), input.CreationDate !== undefined && input.CreationDate !== null && {\n    CreationDate: input.CreationDate\n  }), input.LastModifiedDate !== undefined && input.LastModifiedDate !== null && {\n    LastModifiedDate: input.LastModifiedDate\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1JourneyLimits(input.Limits, context)\n  }), input.LocalTime !== undefined && input.LocalTime !== null && {\n    LocalTime: input.LocalTime\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.RefreshFrequency !== undefined && input.RefreshFrequency !== null && {\n    RefreshFrequency: input.RefreshFrequency\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context)\n  }), input.StartActivity !== undefined && input.StartActivity !== null && {\n    StartActivity: input.StartActivity\n  }), input.StartCondition !== undefined && input.StartCondition !== null && {\n    StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context)\n  }), input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\n\nvar serializeAws_restJson1WriteSegmentRequest = function serializeAws_restJson1WriteSegmentRequest(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.SegmentGroups !== undefined && input.SegmentGroups !== null && {\n    SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context)\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WriteTreatmentResource = function serializeAws_restJson1WriteTreatmentResource(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SizePercent !== undefined && input.SizePercent !== null && {\n    SizePercent: input.SizePercent\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  });\n};\n\nvar deserializeAws_restJson1ActivitiesResponse = function deserializeAws_restJson1ActivitiesResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1Activity = function deserializeAws_restJson1Activity(output, context) {\n  return {\n    CUSTOM: output.CUSTOM !== undefined && output.CUSTOM !== null ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context) : undefined,\n    ConditionalSplit: output.ConditionalSplit !== undefined && output.ConditionalSplit !== null ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL: output.EMAIL !== undefined && output.EMAIL !== null ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context) : undefined,\n    Holdout: output.Holdout !== undefined && output.Holdout !== null ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context) : undefined,\n    MultiCondition: output.MultiCondition !== undefined && output.MultiCondition !== null ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context) : undefined,\n    PUSH: output.PUSH !== undefined && output.PUSH !== null ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context) : undefined,\n    RandomSplit: output.RandomSplit !== undefined && output.RandomSplit !== null ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context) : undefined,\n    SMS: output.SMS !== undefined && output.SMS !== null ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context) : undefined,\n    Wait: output.Wait !== undefined && output.Wait !== null ? deserializeAws_restJson1WaitActivity(output.Wait, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActivityResponse = function deserializeAws_restJson1ActivityResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart: output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount: output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null ? output.SuccessfulEndpointCount : undefined,\n    TimezonesCompletedCount: output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null ? output.TimezonesCompletedCount : undefined,\n    TimezonesTotalCount: output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null ? output.TimezonesTotalCount : undefined,\n    TotalEndpointCount: output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null ? output.TotalEndpointCount : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1ADMChannelResponse = function deserializeAws_restJson1ADMChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1AndroidPushNotificationTemplate = function deserializeAws_restJson1AndroidPushNotificationTemplate(output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl: output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null ? output.SmallImageIconUrl : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSChannelResponse = function deserializeAws_restJson1APNSChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSPushNotificationTemplate = function deserializeAws_restJson1APNSPushNotificationTemplate(output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSSandboxChannelResponse = function deserializeAws_restJson1APNSSandboxChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSVoipChannelResponse = function deserializeAws_restJson1APNSVoipChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSVoipSandboxChannelResponse = function deserializeAws_restJson1APNSVoipSandboxChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationDateRangeKpiResponse = function deserializeAws_restJson1ApplicationDateRangeKpiResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationResponse = function deserializeAws_restJson1ApplicationResponse(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationSettingsResource = function deserializeAws_restJson1ApplicationSettingsResource(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook: output.CampaignHook !== undefined && output.CampaignHook !== null ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationsResponse = function deserializeAws_restJson1ApplicationsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1AttributeDimension = function deserializeAws_restJson1AttributeDimension(output, context) {\n  return {\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1AttributesResource = function deserializeAws_restJson1AttributesResource(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1ListOf__string(output.Attributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1BaiduChannelResponse = function deserializeAws_restJson1BaiduChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1BaseKpiResult = function deserializeAws_restJson1BaseKpiResult(output, context) {\n  return {\n    Rows: output.Rows !== undefined && output.Rows !== null ? deserializeAws_restJson1ListOfResultRow(output.Rows, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignCustomMessage = function deserializeAws_restJson1CampaignCustomMessage(output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignDateRangeKpiResponse = function deserializeAws_restJson1CampaignDateRangeKpiResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignEmailMessage = function deserializeAws_restJson1CampaignEmailMessage(output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignEventFilter = function deserializeAws_restJson1CampaignEventFilter(output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignHook = function deserializeAws_restJson1CampaignHook(output, context) {\n  return {\n    LambdaFunctionName: output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null ? output.LambdaFunctionName : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignLimits = function deserializeAws_restJson1CampaignLimits(output, context) {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration: output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignResponse = function deserializeAws_restJson1CampaignResponse(output, context) {\n  return {\n    AdditionalTreatments: output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    DefaultState: output.DefaultState !== undefined && output.DefaultState !== null ? deserializeAws_restJson1CampaignState(output.DefaultState, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent: output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook: output.Hook !== undefined && output.Hook !== null ? deserializeAws_restJson1CampaignHook(output.Hook, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignSmsMessage = function deserializeAws_restJson1CampaignSmsMessage(output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignsResponse = function deserializeAws_restJson1CampaignsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignState = function deserializeAws_restJson1CampaignState(output, context) {\n  return {\n    CampaignStatus: output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined\n  };\n};\n\nvar deserializeAws_restJson1ChannelResponse = function deserializeAws_restJson1ChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1ChannelsResponse = function deserializeAws_restJson1ChannelsResponse(output, context) {\n  return {\n    Channels: output.Channels !== undefined && output.Channels !== null ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Condition = function deserializeAws_restJson1Condition(output, context) {\n  return {\n    Conditions: output.Conditions !== undefined && output.Conditions !== null ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context) : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined\n  };\n};\n\nvar deserializeAws_restJson1ConditionalSplitActivity = function deserializeAws_restJson1ConditionalSplitActivity(output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1Condition(output.Condition, context) : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined,\n    FalseActivity: output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1CreateTemplateMessageBody = function deserializeAws_restJson1CreateTemplateMessageBody(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1CustomDeliveryConfiguration = function deserializeAws_restJson1CustomDeliveryConfiguration(output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CustomMessageActivity = function deserializeAws_restJson1CustomMessageActivity(output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined,\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1DefaultPushNotificationTemplate = function deserializeAws_restJson1DefaultPushNotificationTemplate(output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailChannelResponse = function deserializeAws_restJson1EmailChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet: output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailMessageActivity = function deserializeAws_restJson1EmailMessageActivity(output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailTemplateResponse = function deserializeAws_restJson1EmailTemplateResponse(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointDemographic = function deserializeAws_restJson1EndpointDemographic(output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion: output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointItemResponse = function deserializeAws_restJson1EndpointItemResponse(output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointLocation = function deserializeAws_restJson1EndpointLocation(output, context) {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointMessageResult = function deserializeAws_restJson1EndpointMessageResult(output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointResponse = function deserializeAws_restJson1EndpointResponse(output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context) : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context) : undefined,\n    EffectiveDate: output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus: output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1EndpointLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__double(output.Metrics, context) : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User: output.User !== undefined && output.User !== null ? deserializeAws_restJson1EndpointUser(output.User, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointsResponse = function deserializeAws_restJson1EndpointsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointUser = function deserializeAws_restJson1EndpointUser(output, context) {\n  return {\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context) : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventCondition = function deserializeAws_restJson1EventCondition(output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    MessageActivity: output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventDimensions = function deserializeAws_restJson1EventDimensions(output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    EventType: output.EventType !== undefined && output.EventType !== null ? deserializeAws_restJson1SetDimension(output.EventType, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventFilter = function deserializeAws_restJson1EventFilter(output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventItemResponse = function deserializeAws_restJson1EventItemResponse(output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventsResponse = function deserializeAws_restJson1EventsResponse(output, context) {\n  return {\n    Results: output.Results !== undefined && output.Results !== null ? deserializeAws_restJson1MapOfItemResponse(output.Results, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventStartCondition = function deserializeAws_restJson1EventStartCondition(output, context) {\n  return {\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1EventFilter(output.EventFilter, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventStream = function deserializeAws_restJson1EventStream(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn: output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null ? output.DestinationStreamArn : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy: output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobResource = function deserializeAws_restJson1ExportJobResource(output, context) {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobResponse = function deserializeAws_restJson1ExportJobResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ExportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobsResponse = function deserializeAws_restJson1ExportJobsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1GCMChannelResponse = function deserializeAws_restJson1GCMChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1GPSCoordinates = function deserializeAws_restJson1GPSCoordinates(output, context) {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined\n  };\n};\n\nvar deserializeAws_restJson1GPSPointDimension = function deserializeAws_restJson1GPSPointDimension(output, context) {\n  return {\n    Coordinates: output.Coordinates !== undefined && output.Coordinates !== null ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context) : undefined,\n    RangeInKilometers: output.RangeInKilometers !== undefined && output.RangeInKilometers !== null ? output.RangeInKilometers : undefined\n  };\n};\n\nvar deserializeAws_restJson1HoldoutActivity = function deserializeAws_restJson1HoldoutActivity(output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobResource = function deserializeAws_restJson1ImportJobResource(output, context) {\n  return {\n    DefineSegment: output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints: output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null ? output.RegisterEndpoints : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobResponse = function deserializeAws_restJson1ImportJobResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ImportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobsResponse = function deserializeAws_restJson1ImportJobsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1ItemResponse = function deserializeAws_restJson1ItemResponse(output, context) {\n  return {\n    EndpointItemResponse: output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context) : undefined,\n    EventsItemResponse: output.EventsItemResponse !== undefined && output.EventsItemResponse !== null ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyCustomMessage = function deserializeAws_restJson1JourneyCustomMessage(output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyDateRangeKpiResponse = function deserializeAws_restJson1JourneyDateRangeKpiResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyEmailMessage = function deserializeAws_restJson1JourneyEmailMessage(output, context) {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = function deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(output, context) {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId: output.JourneyActivityId !== undefined && output.JourneyActivityId !== null ? output.JourneyActivityId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyExecutionMetricsResponse = function deserializeAws_restJson1JourneyExecutionMetricsResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyLimits = function deserializeAws_restJson1JourneyLimits(output, context) {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap: output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null ? output.EndpointReentryCap : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyPushMessage = function deserializeAws_restJson1JourneyPushMessage(output, context) {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyResponse = function deserializeAws_restJson1JourneyResponse(output, context) {\n  return {\n    Activities: output.Activities !== undefined && output.Activities !== null ? deserializeAws_restJson1MapOfActivity(output.Activities, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1JourneyLimits(output.Limits, context) : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    RefreshFrequency: output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1JourneySchedule(output.Schedule, context) : undefined,\n    StartActivity: output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition: output.StartCondition !== undefined && output.StartCondition !== null ? deserializeAws_restJson1StartCondition(output.StartCondition, context) : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneySchedule = function deserializeAws_restJson1JourneySchedule(output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneySMSMessage = function deserializeAws_restJson1JourneySMSMessage(output, context) {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneysResponse = function deserializeAws_restJson1JourneysResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1ListOf__EndpointTypesElement = function deserializeAws_restJson1ListOf__EndpointTypesElement(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restJson1ListOf__string = function deserializeAws_restJson1ListOf__string(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restJson1ListOfActivityResponse = function deserializeAws_restJson1ListOfActivityResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActivityResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfApplicationResponse = function deserializeAws_restJson1ListOfApplicationResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ApplicationResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfCampaignResponse = function deserializeAws_restJson1ListOfCampaignResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1CampaignResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfEndpointResponse = function deserializeAws_restJson1ListOfEndpointResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1EndpointResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfExportJobResponse = function deserializeAws_restJson1ListOfExportJobResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ExportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfImportJobResponse = function deserializeAws_restJson1ListOfImportJobResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ImportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfJourneyResponse = function deserializeAws_restJson1ListOfJourneyResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1JourneyResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfMultiConditionalBranch = function deserializeAws_restJson1ListOfMultiConditionalBranch(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfRandomSplitEntry = function deserializeAws_restJson1ListOfRandomSplitEntry(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfRecommenderConfigurationResponse = function deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfResultRow = function deserializeAws_restJson1ListOfResultRow(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ResultRow(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfResultRowValue = function deserializeAws_restJson1ListOfResultRowValue(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ResultRowValue(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentDimensions = function deserializeAws_restJson1ListOfSegmentDimensions(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentGroup = function deserializeAws_restJson1ListOfSegmentGroup(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentReference = function deserializeAws_restJson1ListOfSegmentReference(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentReference(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentResponse = function deserializeAws_restJson1ListOfSegmentResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSimpleCondition = function deserializeAws_restJson1ListOfSimpleCondition(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTemplateResponse = function deserializeAws_restJson1ListOfTemplateResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TemplateResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTemplateVersionResponse = function deserializeAws_restJson1ListOfTemplateVersionResponse(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTreatmentResource = function deserializeAws_restJson1ListOfTreatmentResource(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TreatmentResource(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListRecommenderConfigurationsResponse = function deserializeAws_restJson1ListRecommenderConfigurationsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1MapOf__double = function deserializeAws_restJson1MapOf__double(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOf__integer = function deserializeAws_restJson1MapOf__integer(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOf__string = function deserializeAws_restJson1MapOf__string(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfActivity = function deserializeAws_restJson1MapOfActivity(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfAttributeDimension = function deserializeAws_restJson1MapOfAttributeDimension(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfChannelResponse = function deserializeAws_restJson1MapOfChannelResponse(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ChannelResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfEndpointMessageResult = function deserializeAws_restJson1MapOfEndpointMessageResult(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EndpointMessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfEventItemResponse = function deserializeAws_restJson1MapOfEventItemResponse(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EventItemResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfItemResponse = function deserializeAws_restJson1MapOfItemResponse(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ItemResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfListOf__string = function deserializeAws_restJson1MapOfListOf__string(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMapOfEndpointMessageResult = function deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MapOfEndpointMessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMessageResult = function deserializeAws_restJson1MapOfMessageResult(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMetricDimension = function deserializeAws_restJson1MapOfMetricDimension(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1Message = function deserializeAws_restJson1Message(output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl: output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null ? output.ImageSmallIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageBody = function deserializeAws_restJson1MessageBody(output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageConfiguration = function deserializeAws_restJson1MessageConfiguration(output, context) {\n  return {\n    ADMMessage: output.ADMMessage !== undefined && output.ADMMessage !== null ? deserializeAws_restJson1Message(output.ADMMessage, context) : undefined,\n    APNSMessage: output.APNSMessage !== undefined && output.APNSMessage !== null ? deserializeAws_restJson1Message(output.APNSMessage, context) : undefined,\n    BaiduMessage: output.BaiduMessage !== undefined && output.BaiduMessage !== null ? deserializeAws_restJson1Message(output.BaiduMessage, context) : undefined,\n    CustomMessage: output.CustomMessage !== undefined && output.CustomMessage !== null ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context) : undefined,\n    DefaultMessage: output.DefaultMessage !== undefined && output.DefaultMessage !== null ? deserializeAws_restJson1Message(output.DefaultMessage, context) : undefined,\n    EmailMessage: output.EmailMessage !== undefined && output.EmailMessage !== null ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context) : undefined,\n    GCMMessage: output.GCMMessage !== undefined && output.GCMMessage !== null ? deserializeAws_restJson1Message(output.GCMMessage, context) : undefined,\n    SMSMessage: output.SMSMessage !== undefined && output.SMSMessage !== null ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageResponse = function deserializeAws_restJson1MessageResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult: output.EndpointResult !== undefined && output.EndpointResult !== null ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context) : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMessageResult(output.Result, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageResult = function deserializeAws_restJson1MessageResult(output, context) {\n  return {\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1MetricDimension = function deserializeAws_restJson1MetricDimension(output, context) {\n  return {\n    ComparisonOperator: output.ComparisonOperator !== undefined && output.ComparisonOperator !== null ? output.ComparisonOperator : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_restJson1MultiConditionalBranch = function deserializeAws_restJson1MultiConditionalBranch(output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1SimpleCondition(output.Condition, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1MultiConditionalSplitActivity = function deserializeAws_restJson1MultiConditionalSplitActivity(output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context) : undefined,\n    DefaultActivity: output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1NumberValidateResponse = function deserializeAws_restJson1NumberValidateResponse(output, context) {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164: output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null ? output.CleansedPhoneNumberE164 : undefined,\n    CleansedPhoneNumberNational: output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null ? output.CleansedPhoneNumberNational : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2: output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric: output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null ? output.CountryCodeNumeric : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2: output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null ? output.OriginalCountryCodeIso2 : undefined,\n    OriginalPhoneNumber: output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null ? output.OriginalPhoneNumber : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode: output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1PushMessageActivity = function deserializeAws_restJson1PushMessageActivity(output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1PushNotificationTemplateResponse = function deserializeAws_restJson1PushNotificationTemplateResponse(output, context) {\n  return {\n    ADM: output.ADM !== undefined && output.ADM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context) : undefined,\n    APNS: output.APNS !== undefined && output.APNS !== null ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context) : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu: output.Baidu !== undefined && output.Baidu !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default: output.Default !== undefined && output.Default !== null ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context) : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    GCM: output.GCM !== undefined && output.GCM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1QuietTime = function deserializeAws_restJson1QuietTime(output, context) {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined\n  };\n};\n\nvar deserializeAws_restJson1RandomSplitActivity = function deserializeAws_restJson1RandomSplitActivity(output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1RandomSplitEntry = function deserializeAws_restJson1RandomSplitEntry(output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\n\nvar deserializeAws_restJson1RecencyDimension = function deserializeAws_restJson1RecencyDimension(output, context) {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined\n  };\n};\n\nvar deserializeAws_restJson1RecommenderConfigurationResponse = function deserializeAws_restJson1RecommenderConfigurationResponse(output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOf__string(output.Attributes, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType: output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null ? output.RecommendationProviderIdType : undefined,\n    RecommendationProviderRoleArn: output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null ? output.RecommendationProviderRoleArn : undefined,\n    RecommendationProviderUri: output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null ? output.RecommendationProviderUri : undefined,\n    RecommendationTransformerUri: output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null ? output.RecommendationTransformerUri : undefined,\n    RecommendationsDisplayName: output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null ? output.RecommendationsDisplayName : undefined,\n    RecommendationsPerMessage: output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null ? output.RecommendationsPerMessage : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResultRow = function deserializeAws_restJson1ResultRow(output, context) {\n  return {\n    GroupedBys: output.GroupedBys !== undefined && output.GroupedBys !== null ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context) : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResultRowValue = function deserializeAws_restJson1ResultRowValue(output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_restJson1Schedule = function deserializeAws_restJson1Schedule(output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context) : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentBehaviors = function deserializeAws_restJson1SegmentBehaviors(output, context) {\n  return {\n    Recency: output.Recency !== undefined && output.Recency !== null ? deserializeAws_restJson1RecencyDimension(output.Recency, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentCondition = function deserializeAws_restJson1SegmentCondition(output, context) {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentDemographics = function deserializeAws_restJson1SegmentDemographics(output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? deserializeAws_restJson1SetDimension(output.AppVersion, context) : undefined,\n    Channel: output.Channel !== undefined && output.Channel !== null ? deserializeAws_restJson1SetDimension(output.Channel, context) : undefined,\n    DeviceType: output.DeviceType !== undefined && output.DeviceType !== null ? deserializeAws_restJson1SetDimension(output.DeviceType, context) : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? deserializeAws_restJson1SetDimension(output.Make, context) : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? deserializeAws_restJson1SetDimension(output.Model, context) : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? deserializeAws_restJson1SetDimension(output.Platform, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentDimensions = function deserializeAws_restJson1SegmentDimensions(output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    Behavior: output.Behavior !== undefined && output.Behavior !== null ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context) : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context) : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1SegmentLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined,\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentGroup = function deserializeAws_restJson1SegmentGroup(output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context) : undefined,\n    SourceSegments: output.SourceSegments !== undefined && output.SourceSegments !== null ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context) : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentGroupList = function deserializeAws_restJson1SegmentGroupList(output, context) {\n  return {\n    Groups: output.Groups !== undefined && output.Groups !== null ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context) : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentImportResource = function deserializeAws_restJson1SegmentImportResource(output, context) {\n  return {\n    ChannelCounts: output.ChannelCounts !== undefined && output.ChannelCounts !== null ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context) : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentLocation = function deserializeAws_restJson1SegmentLocation(output, context) {\n  return {\n    Country: output.Country !== undefined && output.Country !== null ? deserializeAws_restJson1SetDimension(output.Country, context) : undefined,\n    GPSPoint: output.GPSPoint !== undefined && output.GPSPoint !== null ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentReference = function deserializeAws_restJson1SegmentReference(output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentResponse = function deserializeAws_restJson1SegmentResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition: output.ImportDefinition !== undefined && output.ImportDefinition !== null ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups: output.SegmentGroups !== undefined && output.SegmentGroups !== null ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context) : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentsResponse = function deserializeAws_restJson1SegmentsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1SendUsersMessageResponse = function deserializeAws_restJson1SendUsersMessageResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SetDimension = function deserializeAws_restJson1SetDimension(output, context) {\n  return {\n    DimensionType: output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SimpleCondition = function deserializeAws_restJson1SimpleCondition(output, context) {\n  return {\n    EventCondition: output.EventCondition !== undefined && output.EventCondition !== null ? deserializeAws_restJson1EventCondition(output.EventCondition, context) : undefined,\n    SegmentCondition: output.SegmentCondition !== undefined && output.SegmentCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context) : undefined,\n    SegmentDimensions: output.segmentDimensions !== undefined && output.segmentDimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSChannelResponse = function deserializeAws_restJson1SMSChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond: output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null ? output.PromotionalMessagesPerSecond : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond: output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null ? output.TransactionalMessagesPerSecond : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSMessageActivity = function deserializeAws_restJson1SMSMessageActivity(output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSTemplateResponse = function deserializeAws_restJson1SMSTemplateResponse(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1StartCondition = function deserializeAws_restJson1StartCondition(output, context) {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition: output.EventStartCondition !== undefined && output.EventStartCondition !== null ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context) : undefined,\n    SegmentStartCondition: output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TagsModel = function deserializeAws_restJson1TagsModel(output, context) {\n  return {\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Template = function deserializeAws_restJson1Template(output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateConfiguration = function deserializeAws_restJson1TemplateConfiguration(output, context) {\n  return {\n    EmailTemplate: output.EmailTemplate !== undefined && output.EmailTemplate !== null ? deserializeAws_restJson1Template(output.EmailTemplate, context) : undefined,\n    PushTemplate: output.PushTemplate !== undefined && output.PushTemplate !== null ? deserializeAws_restJson1Template(output.PushTemplate, context) : undefined,\n    SMSTemplate: output.SMSTemplate !== undefined && output.SMSTemplate !== null ? deserializeAws_restJson1Template(output.SMSTemplate, context) : undefined,\n    VoiceTemplate: output.VoiceTemplate !== undefined && output.VoiceTemplate !== null ? deserializeAws_restJson1Template(output.VoiceTemplate, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateResponse = function deserializeAws_restJson1TemplateResponse(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplatesResponse = function deserializeAws_restJson1TemplatesResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateVersionResponse = function deserializeAws_restJson1TemplateVersionResponse(output, context) {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateVersionsResponse = function deserializeAws_restJson1TemplateVersionsResponse(output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context) : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1TreatmentResource = function deserializeAws_restJson1TreatmentResource(output, context) {\n  return {\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined\n  };\n};\n\nvar deserializeAws_restJson1VoiceChannelResponse = function deserializeAws_restJson1VoiceChannelResponse(output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1VoiceTemplateResponse = function deserializeAws_restJson1VoiceTemplateResponse(output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1WaitActivity = function deserializeAws_restJson1WaitActivity(output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime: output.WaitTime !== undefined && output.WaitTime !== null ? deserializeAws_restJson1WaitTime(output.WaitTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1WaitTime = function deserializeAws_restJson1WaitTime(output, context) {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined\n  };\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {\n  var findKey = function findKey(object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":null,"metadata":{},"sourceType":"module"}
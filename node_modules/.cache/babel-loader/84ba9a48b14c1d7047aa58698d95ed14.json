{"ast":null,"code":"import _toConsumableArray from \"C:\\\\laragon\\\\www\\\\Archive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\Archive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\Archive\\\\src\\\\_metronic\\\\layout\\\\KtContent.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport * as builder from '../ducks/builder';\n\nfunction KtContent(_ref) {\n  var children = _ref.children,\n      contentContainerClasses = _ref.contentContainerClasses;\n  var match = useRouteMatch() || {};\n  var animationEndClass = 'kt-grid--animateContent-finished';\n\n  var _useState = useState(['kt-grid--animateContent', 'kt-container', contentContainerClasses.split(' '), 'kt-grid__item kt-grid__item--fluid', animationEndClass]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cssClassesState = _useState2[0],\n      setCssClassesState = _useState2[1];\n\n  useEffect(function () {\n    // for animation start should toggle 'kt-grid--animateContent-finished' css class\n    // TODO: change useMemo\n    var fullClasses = _toConsumableArray(cssClassesState);\n\n    var startAnimation = fullClasses.filter(function (el) {\n      return el !== animationEndClass;\n    });\n    setCssClassesState(startAnimation);\n    var timeOutId = setTimeout(function () {\n      setCssClassesState(fullClasses);\n    }, 200);\n    return function () {\n      clearTimeout(timeOutId);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match.url]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClassesState.join(' '),\n    style: {\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    contentContainerClasses: builder.selectors.getClasses(store, {\n      path: 'content_container',\n      toString: true\n    })\n  };\n};\n\nexport default connect(mapStateToProps)(KtContent);","map":{"version":3,"names":["React","useEffect","useState","connect","useRouteMatch","builder","KtContent","children","contentContainerClasses","match","animationEndClass","split","cssClassesState","setCssClassesState","fullClasses","startAnimation","filter","el","timeOutId","setTimeout","clearTimeout","url","join","marginTop","mapStateToProps","store","selectors","getClasses","path","toString"],"sources":["C:/laragon/www/Archive/src/_metronic/layout/KtContent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport * as builder from '../ducks/builder';\n\nfunction KtContent({ children, contentContainerClasses }) {\n  const match = useRouteMatch() || {};\n  const animationEndClass = 'kt-grid--animateContent-finished';\n  const [cssClassesState, setCssClassesState] = useState([\n    'kt-grid--animateContent',\n    'kt-container',\n    contentContainerClasses.split(' '),\n    'kt-grid__item kt-grid__item--fluid',\n    animationEndClass,\n  ]);\n\n  useEffect(() => {\n    // for animation start should toggle 'kt-grid--animateContent-finished' css class\n    // TODO: change useMemo\n    const fullClasses = [...cssClassesState];\n    const startAnimation = fullClasses.filter((el) => el !== animationEndClass);\n    setCssClassesState(startAnimation);\n    const timeOutId = setTimeout(() => {\n      setCssClassesState(fullClasses);\n    }, 200);\n\n    return () => {\n      clearTimeout(timeOutId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [match.url]);\n\n  return (\n    <div className={cssClassesState.join(' ')} style={{ marginTop: '30px' }}>\n      {children}\n    </div>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  contentContainerClasses: builder.selectors.getClasses(store, {\n    path: 'content_container',\n    toString: true,\n  }),\n});\n\nexport default connect(mapStateToProps)(KtContent);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,SAASC,SAAT,OAA0D;EAAA,IAArCC,QAAqC,QAArCA,QAAqC;EAAA,IAA3BC,uBAA2B,QAA3BA,uBAA2B;EACxD,IAAMC,KAAK,GAAGL,aAAa,MAAM,EAAjC;EACA,IAAMM,iBAAiB,GAAG,kCAA1B;;EACA,gBAA8CR,QAAQ,CAAC,CACrD,yBADqD,EAErD,cAFqD,EAGrDM,uBAAuB,CAACG,KAAxB,CAA8B,GAA9B,CAHqD,EAIrD,oCAJqD,EAKrDD,iBALqD,CAAD,CAAtD;EAAA;EAAA,IAAOE,eAAP;EAAA,IAAwBC,kBAAxB;;EAQAZ,SAAS,CAAC,YAAM;IACd;IACA;IACA,IAAMa,WAAW,sBAAOF,eAAP,CAAjB;;IACA,IAAMG,cAAc,GAAGD,WAAW,CAACE,MAAZ,CAAmB,UAACC,EAAD;MAAA,OAAQA,EAAE,KAAKP,iBAAf;IAAA,CAAnB,CAAvB;IACAG,kBAAkB,CAACE,cAAD,CAAlB;IACA,IAAMG,SAAS,GAAGC,UAAU,CAAC,YAAM;MACjCN,kBAAkB,CAACC,WAAD,CAAlB;IACD,CAF2B,EAEzB,GAFyB,CAA5B;IAIA,OAAO,YAAM;MACXM,YAAY,CAACF,SAAD,CAAZ;IACD,CAFD,CAVc,CAad;EACD,CAdQ,EAcN,CAACT,KAAK,CAACY,GAAP,CAdM,CAAT;EAgBA,oBACE;IAAK,SAAS,EAAET,eAAe,CAACU,IAAhB,CAAqB,GAArB,CAAhB;IAA2C,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAb,CAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGhB,QADH,CADF;AAKD;;AAED,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAA,OAAY;IAClCjB,uBAAuB,EAAEH,OAAO,CAACqB,SAAR,CAAkBC,UAAlB,CAA6BF,KAA7B,EAAoC;MAC3DG,IAAI,EAAE,mBADqD;MAE3DC,QAAQ,EAAE;IAFiD,CAApC;EADS,CAAZ;AAAA,CAAxB;;AAOA,eAAe1B,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export { default as ParseError } from '../es6/ParseError.js'; // `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\n\nexport { default as parsePhoneNumberWithError, default as parsePhoneNumber } from '../es6/parsePhoneNumber.js'; // `parsePhoneNumberFromString()` named export is now considered legacy:\n// it has been promoted to a default export due to being too verbose.\n\nexport { default, default as parsePhoneNumberFromString } from '../es6/parsePhoneNumberFromString.js';\nexport { default as isValidPhoneNumber } from '../es6/isValidPhoneNumber.js';\nexport { default as isPossiblePhoneNumber } from '../es6/isPossiblePhoneNumber.js';\nexport { default as validatePhoneNumberLength } from '../es6/validatePhoneNumberLength.js'; // Deprecated.\n\nexport { default as findNumbers } from '../es6/findNumbers.js'; // Deprecated.\n\nexport { default as searchNumbers } from '../es6/searchNumbers.js';\nexport { default as findPhoneNumbersInText } from '../es6/findPhoneNumbersInText.js';\nexport { default as searchPhoneNumbersInText } from '../es6/searchPhoneNumbersInText.js';\nexport { default as PhoneNumberMatcher } from '../es6/PhoneNumberMatcher.js';\nexport { default as AsYouType } from '../es6/AsYouType.js';\nexport { DIGIT_PLACEHOLDER } from '../es6/AsYouTypeFormatter.js';\nexport { default as getCountries } from '../es6/getCountries.js';\nexport { default as Metadata, isSupportedCountry, getCountryCallingCode, getExtPrefix } from '../es6/metadata.js';\nexport { default as getExampleNumber } from '../es6/getExampleNumber.js';\nexport { default as formatIncompletePhoneNumber } from '../es6/formatIncompletePhoneNumber.js';\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from '../es6/parseIncompletePhoneNumber.js';\nexport { default as parseDigits } from '../es6/helpers/parseDigits.js';\nexport { parseRFC3966, formatRFC3966 } from '../es6/helpers/RFC3966.js';","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StartCelebrityRecognitionRequest, StartCelebrityRecognitionResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StartCelebrityRecognitionCommand, serializeAws_json1_1StartCelebrityRecognitionCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Starts asynchronous recognition of celebrities in a stored video.</p>\n *          <p>Amazon Rekognition Video can detect celebrities in a video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket name\n *       and the filename of the video.\n *       <code>StartCelebrityRecognition</code>\n *       returns a job identifier (<code>JobId</code>) which you use to get the results of the analysis.\n *       When celebrity recognition analysis is finished, Amazon Rekognition Video publishes a completion status\n *       to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.\n *       To get the results of the celebrity recognition analysis, first check that the status value published to the Amazon SNS\n *       topic is <code>SUCCEEDED</code>. If so, call  <a>GetCelebrityRecognition</a> and pass the job identifier\n *       (<code>JobId</code>) from the initial call to <code>StartCelebrityRecognition</code>. </p>\n *\n *          <p>For more information, see Recognizing Celebrities in the Amazon Rekognition Developer Guide.</p>\n */\n\nvar StartCelebrityRecognitionCommand =\n/** @class */\nfunction (_super) {\n  __extends(StartCelebrityRecognitionCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function StartCelebrityRecognitionCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  StartCelebrityRecognitionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"RekognitionClient\";\n    var commandName = \"StartCelebrityRecognitionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StartCelebrityRecognitionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StartCelebrityRecognitionResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  StartCelebrityRecognitionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StartCelebrityRecognitionCommand(input, context);\n  };\n\n  StartCelebrityRecognitionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StartCelebrityRecognitionCommand(output, context);\n  };\n\n  return StartCelebrityRecognitionCommand;\n}($Command);\n\nexport { StartCelebrityRecognitionCommand };","map":null,"metadata":{},"sourceType":"module"}
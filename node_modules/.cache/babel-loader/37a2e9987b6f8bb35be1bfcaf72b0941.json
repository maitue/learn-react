{"ast":null,"code":"import _slicedToArray from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _toPropertyKey from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toPropertyKey\";\nimport _defineProperty from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\src\\\\_metronic\\\\layout\\\\LayoutContext.js\";\nimport React, { createContext, useContext, useEffect, useMemo, useReducer } from 'react';\n/**\n * Both context used to create inside react `redux`-like global state managed\n * entirely by react.\n *\n * @see https://kentcdodds.com/blog/how-to-use-react-context-effectively\n */\n\nvar LayoutContext = {\n  /**\n   * Stores layout state, can be consumed globally.\n   */\n  State: createContext(null),\n\n  /**\n   * Stores `dispatch` function to update layout state, intended to be internal.\n   */\n  Dispatch: createContext(null)\n};\n/**\n * Layout action types, used to filter out dispatched actions.\n */\n\nvar actionTypes = {\n  /**\n   * Initializes layout state from provided `{ pathname, menuConfig }` action\n   * payload.\n   */\n  INIT: 'INIT',\n\n  /**\n   * Updates current subheader from provided `{ title }` action payload.\n   */\n  SET_SUBHEADER: 'SET_SUBHEADER',\n\n  /**\n   * Controls splash screen visibility.\n   */\n  SHOW_SPLASH_SCREEN: 'SHOW_SPLASH_SCREEN',\n  HIDE_SPLASH_SCREEN: 'HIDE_SPLASH_SCREEN'\n};\n/**\n * Recursively runs over `items` to find `pageConfig` of `currentPage`.\n *\n * Returns `undefined` if there are no matches.\n */\n\nfunction findPageConfig(currentPage, items, breadcrumbs) {\n  // Ignore non array `items`.\n  if (!items || !Array.isArray(items)) {\n    return;\n  }\n\n  var _iterator = _createForOfIteratorHelper(items),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      // Return `item` if it's `page` matches `currentPage`\n      if (currentPage === item.page && !item.submenu) {\n        return item;\n      } // Try to `pageConfig` in `item.submenu` if it is defined.\n\n\n      if (item.submenu) {\n        var pageConfig = findPageConfig(currentPage, item.submenu, breadcrumbs);\n\n        if (pageConfig) {\n          breadcrumbs.push(item);\n          return pageConfig;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n/**\n * Used to lazily create initial layout state.\n */\n\n\nfunction init(_ref) {\n  var pathname = _ref.pathname,\n      menuConfig = _ref.menuConfig;\n  var currentPage = pathname.slice(1\n  /* Remove leading slash. */\n  );\n  var breadcrumbs = [];\n  var pageConfig = findPageConfig(currentPage, menuConfig.aside.items, breadcrumbs) || findPageConfig(currentPage, menuConfig.header.items, breadcrumbs);\n  breadcrumbs.reverse();\n  var state = {\n    subheader: {\n      title: '',\n      breadcrumb: [],\n      description: ''\n    },\n    splashScreen: {\n      refs: {}\n    }\n  };\n\n  if (pageConfig) {\n    breadcrumbs.push(pageConfig);\n    state.subheader.title = pageConfig.title;\n    state.subheader.breadcrumb = breadcrumbs;\n  }\n\n  return state;\n}\n\nfunction reducer(state, _ref2) {\n  var type = _ref2.type,\n      payload = _ref2.payload;\n\n  if (type === actionTypes.INIT) {\n    var nextState = init(payload); // Update only subheader.\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      subheader: nextState.subheader\n    });\n  }\n\n  if (type === actionTypes.SET_SUBHEADER) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      subheader: payload\n    });\n  }\n\n  if (type === actionTypes.SHOW_SPLASH_SCREEN) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      splashScreen: _objectSpread(_objectSpread({}, state.splashScreen), {}, {\n        refs: _objectSpread(_objectSpread({}, state.splashScreen.refs), {}, _defineProperty({}, payload.id, true))\n      })\n    });\n  }\n\n  if (type === actionTypes.HIDE_SPLASH_SCREEN) {\n    var _state$splashScreen$r = state.splashScreen.refs,\n        _payload$id = payload.id,\n        skip = _state$splashScreen$r[_payload$id],\n        nextRefs = _objectWithoutProperties(_state$splashScreen$r, [_payload$id].map(_toPropertyKey));\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      splashScreen: _objectSpread(_objectSpread({}, state.splashScreen), {}, {\n        refs: nextRefs\n      })\n    });\n  }\n\n  return state;\n}\n/**\n * Creates layout reducer and provides it's `state` and ` dispatch`.\n */\n\n\nexport function LayoutContextProvider(_ref3) {\n  var history = _ref3.history,\n      children = _ref3.children,\n      menuConfig = _ref3.menuConfig;\n\n  var _useReducer = useReducer(reducer, {\n    menuConfig: menuConfig,\n    pathname: history.location.pathname\n  }, // See https://reactjs.org/docs/hooks-reference.html#lazy-initialization\n  init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // Subscribe to history changes and reinitialize on each change.\n\n\n  useEffect(function () {\n    return history.listen(function (_ref4) {\n      var pathname = _ref4.pathname;\n      dispatch({\n        type: actionTypes.INIT,\n        payload: {\n          pathname: pathname,\n          menuConfig: menuConfig\n        }\n      });\n    });\n  },\n  /**\n   * Passing `history` and `menuConfig` to `deps` ensures that `useEffect`\n   * will cleanup current `history` listener and will dispatch `INIT`\n   * with `menuConfig` reference from current render.\n   *\n   * @see https://reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\n   */\n  [history, menuConfig]);\n  var splashScreenRefs = state.splashScreen.refs;\n  var splashScreenVisible = useMemo(function () {\n    return Object.keys(splashScreenRefs).length > 0;\n  }, [splashScreenRefs]);\n  useEffect(function () {\n    var splashScreen = document.getElementById('splash-screen');\n\n    if (splashScreenVisible) {\n      splashScreen.classList.remove('hidden');\n      return function () {\n        splashScreen.classList.add('hidden');\n      };\n    }\n\n    var timeout = setTimeout(function () {\n      splashScreen.classList.add('hidden');\n    }, 1000);\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [splashScreenVisible]); // Pass state and dispatch to it's contexts.\n\n  return /*#__PURE__*/React.createElement(LayoutContext.State.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LayoutContext.Dispatch.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, children));\n}\n/**\n * Used to access latest layout context state.\n *\n * @example\n *\n * export function Subheader() {\n *   return (\n *     <LayoutContextConsumer>\n *       {({ subheader: { title } }) => <h1>{title}</h1>}\n *     </LayoutContextConsumer>\n *   );\n * }\n */\n\nexport var LayoutContextConsumer = LayoutContext.State.Consumer;\n/**\n * Hook to access latest layout context state.\n *\n * @example\n *\n * export function Subheader() {\n *   const { subheader: { title } } = useLayoutContext();\n *\n *   return <h1>{title}</h1>;\n * }\n */\n\nexport function useLayoutContext() {\n  var context = useContext(LayoutContext.State);\n\n  if (!context) {\n    throw new Error('');\n  }\n\n  return context;\n}\n/**\n * Used to override layout subheader state.\n */\n\nexport function LayoutSubheader(_ref5) {\n  var title = _ref5.title,\n      breadcrumb = _ref5.breadcrumb,\n      description = _ref5.description;\n  var dispatch = useContext(LayoutContext.Dispatch);\n  useEffect(function () {\n    dispatch({\n      type: actionTypes.SET_SUBHEADER,\n      payload: {\n        title: title,\n        breadcrumb: breadcrumb,\n        description: description\n      }\n    });\n  }, [dispatch, title, breadcrumb, description]);\n  return null;\n}\nexport function LayoutSplashScreen(_ref6) {\n  var _ref6$visible = _ref6.visible,\n      visible = _ref6$visible === void 0 ? false : _ref6$visible;\n  var dispatch = useContext(LayoutContext.Dispatch);\n  useEffect(function () {\n    if (!visible) {\n      return;\n    }\n\n    var id = Math.random();\n    dispatch({\n      type: actionTypes.SHOW_SPLASH_SCREEN,\n      payload: {\n        id: id\n      }\n    });\n    return function () {\n      dispatch({\n        type: actionTypes.HIDE_SPLASH_SCREEN,\n        payload: {\n          id: id\n        }\n      });\n    };\n  }, [visible, dispatch]);\n  return null;\n}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useReducer","LayoutContext","State","Dispatch","actionTypes","INIT","SET_SUBHEADER","SHOW_SPLASH_SCREEN","HIDE_SPLASH_SCREEN","findPageConfig","currentPage","items","breadcrumbs","Array","isArray","item","page","submenu","pageConfig","push","init","pathname","menuConfig","slice","aside","header","reverse","state","subheader","title","breadcrumb","description","splashScreen","refs","reducer","type","payload","nextState","id","skip","nextRefs","LayoutContextProvider","history","children","location","dispatch","listen","splashScreenRefs","splashScreenVisible","Object","keys","length","document","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","LayoutContextConsumer","Consumer","useLayoutContext","context","Error","LayoutSubheader","LayoutSplashScreen","visible","Math","random"],"sources":["C:/laragon/www/LaylaUserGuide/src/_metronic/layout/LayoutContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useReducer } from 'react';\n\n/**\n * Both context used to create inside react `redux`-like global state managed\n * entirely by react.\n *\n * @see https://kentcdodds.com/blog/how-to-use-react-context-effectively\n */\n\nconst LayoutContext = {\n  /**\n   * Stores layout state, can be consumed globally.\n   */\n  State: createContext(null),\n\n  /**\n   * Stores `dispatch` function to update layout state, intended to be internal.\n   */\n  Dispatch: createContext(null),\n};\n\n/**\n * Layout action types, used to filter out dispatched actions.\n */\nconst actionTypes = {\n  /**\n   * Initializes layout state from provided `{ pathname, menuConfig }` action\n   * payload.\n   */\n  INIT: 'INIT',\n\n  /**\n   * Updates current subheader from provided `{ title }` action payload.\n   */\n  SET_SUBHEADER: 'SET_SUBHEADER',\n\n  /**\n   * Controls splash screen visibility.\n   */\n  SHOW_SPLASH_SCREEN: 'SHOW_SPLASH_SCREEN',\n  HIDE_SPLASH_SCREEN: 'HIDE_SPLASH_SCREEN',\n};\n\n/**\n * Recursively runs over `items` to find `pageConfig` of `currentPage`.\n *\n * Returns `undefined` if there are no matches.\n */\nfunction findPageConfig(currentPage, items, breadcrumbs) {\n  // Ignore non array `items`.\n  if (!items || !Array.isArray(items)) {\n    return;\n  }\n\n  for (const item of items) {\n    // Return `item` if it's `page` matches `currentPage`\n    if (currentPage === item.page && !item.submenu) {\n      return item;\n    }\n\n    // Try to `pageConfig` in `item.submenu` if it is defined.\n    if (item.submenu) {\n      const pageConfig = findPageConfig(currentPage, item.submenu, breadcrumbs);\n      if (pageConfig) {\n        breadcrumbs.push(item);\n        return pageConfig;\n      }\n    }\n  }\n}\n\n/**\n * Used to lazily create initial layout state.\n */\nfunction init({ pathname, menuConfig }) {\n  const currentPage = pathname.slice(1 /* Remove leading slash. */);\n  let breadcrumbs = [];\n  const pageConfig =\n    findPageConfig(currentPage, menuConfig.aside.items, breadcrumbs) ||\n    findPageConfig(currentPage, menuConfig.header.items, breadcrumbs);\n\n  breadcrumbs.reverse();\n  const state = {\n    subheader: { title: '', breadcrumb: [], description: '' },\n    splashScreen: { refs: {} },\n  };\n  if (pageConfig) {\n    breadcrumbs.push(pageConfig);\n    state.subheader.title = pageConfig.title;\n    state.subheader.breadcrumb = breadcrumbs;\n  }\n\n  return state;\n}\n\nfunction reducer(state, { type, payload }) {\n  if (type === actionTypes.INIT) {\n    const nextState = init(payload);\n\n    // Update only subheader.\n    return { ...state, subheader: nextState.subheader };\n  }\n\n  if (type === actionTypes.SET_SUBHEADER) {\n    return { ...state, subheader: payload };\n  }\n\n  if (type === actionTypes.SHOW_SPLASH_SCREEN) {\n    return {\n      ...state,\n      splashScreen: {\n        ...state.splashScreen,\n        refs: { ...state.splashScreen.refs, [payload.id]: true },\n      },\n    };\n  }\n\n  if (type === actionTypes.HIDE_SPLASH_SCREEN) {\n    const { [payload.id]: skip, ...nextRefs } = state.splashScreen.refs;\n\n    return {\n      ...state,\n      splashScreen: { ...state.splashScreen, refs: nextRefs },\n    };\n  }\n\n  return state;\n}\n\n/**\n * Creates layout reducer and provides it's `state` and ` dispatch`.\n */\nexport function LayoutContextProvider({ history, children, menuConfig }) {\n  const [state, dispatch] = useReducer(\n    reducer,\n    { menuConfig, pathname: history.location.pathname },\n    // See https://reactjs.org/docs/hooks-reference.html#lazy-initialization\n    init,\n  );\n\n  // Subscribe to history changes and reinitialize on each change.\n  useEffect(\n    () =>\n      history.listen(({ pathname }) => {\n        dispatch({\n          type: actionTypes.INIT,\n          payload: { pathname, menuConfig },\n        });\n      }),\n\n    /**\n     * Passing `history` and `menuConfig` to `deps` ensures that `useEffect`\n     * will cleanup current `history` listener and will dispatch `INIT`\n     * with `menuConfig` reference from current render.\n     *\n     * @see https://reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\n     */\n    [history, menuConfig],\n  );\n\n  const { refs: splashScreenRefs } = state.splashScreen;\n  const splashScreenVisible = useMemo(() => Object.keys(splashScreenRefs).length > 0, [\n    splashScreenRefs,\n  ]);\n\n  useEffect(() => {\n    const splashScreen = document.getElementById('splash-screen');\n\n    if (splashScreenVisible) {\n      splashScreen.classList.remove('hidden');\n\n      return () => {\n        splashScreen.classList.add('hidden');\n      };\n    }\n\n    const timeout = setTimeout(() => {\n      splashScreen.classList.add('hidden');\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [splashScreenVisible]);\n\n  // Pass state and dispatch to it's contexts.\n  return (\n    <LayoutContext.State.Provider value={state}>\n      <LayoutContext.Dispatch.Provider value={dispatch}>{children}</LayoutContext.Dispatch.Provider>\n    </LayoutContext.State.Provider>\n  );\n}\n\n/**\n * Used to access latest layout context state.\n *\n * @example\n *\n * export function Subheader() {\n *   return (\n *     <LayoutContextConsumer>\n *       {({ subheader: { title } }) => <h1>{title}</h1>}\n *     </LayoutContextConsumer>\n *   );\n * }\n */\nexport const LayoutContextConsumer = LayoutContext.State.Consumer;\n\n/**\n * Hook to access latest layout context state.\n *\n * @example\n *\n * export function Subheader() {\n *   const { subheader: { title } } = useLayoutContext();\n *\n *   return <h1>{title}</h1>;\n * }\n */\nexport function useLayoutContext() {\n  const context = useContext(LayoutContext.State);\n\n  if (!context) {\n    throw new Error('');\n  }\n\n  return context;\n}\n\n/**\n * Used to override layout subheader state.\n */\nexport function LayoutSubheader({ title, breadcrumb, description }) {\n  const dispatch = useContext(LayoutContext.Dispatch);\n\n  useEffect(() => {\n    dispatch({\n      type: actionTypes.SET_SUBHEADER,\n      payload: { title, breadcrumb, description },\n    });\n  }, [dispatch, title, breadcrumb, description]);\n\n  return null;\n}\n\nexport function LayoutSplashScreen({ visible = false }) {\n  const dispatch = useContext(LayoutContext.Dispatch);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    const id = Math.random();\n\n    dispatch({ type: actionTypes.SHOW_SPLASH_SCREEN, payload: { id } });\n\n    return () => {\n      dispatch({ type: actionTypes.HIDE_SPLASH_SCREEN, payload: { id } });\n    };\n  }, [visible, dispatch]);\n\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteBucketPolicyRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteBucketPolicyCommand, serializeAws_restXmlDeleteBucketPolicyCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the DELETE operation uses the policy subresource to delete the\n *          policy of a specified bucket. If you are using an identity other than the root user of the\n *          AWS account that owns the bucket, the calling identity must have the\n *             <code>DeleteBucketPolicy</code> permissions on the specified bucket and belong to the\n *          bucket owner's account to use this operation. </p>\n *\n *          <p>If you don't have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n *             Access Denied</code> error. If you have the correct permissions, but you're not using an\n *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n *             Allowed</code> error. </p>\n *\n *\n *          <important>\n *             <p>As a security precaution, the root user of the AWS account that owns a bucket can\n *             always use this operation, even if the policy explicitly denies the root user the\n *             ability to perform this action.</p>\n *          </important>\n *\n *          <p>For more information about bucket policies, see <a href=\" https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and\n *             UserPolicies</a>. </p>\n *          <p>The following operations are related to <code>DeleteBucketPolicy</code>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\">DeleteObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar DeleteBucketPolicyCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteBucketPolicyCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteBucketPolicyCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteBucketPolicyCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteBucketPolicyCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteBucketPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteBucketPolicyCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteBucketPolicyCommand(input, context);\n  };\n\n  DeleteBucketPolicyCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteBucketPolicyCommand(output, context);\n  };\n\n  return DeleteBucketPolicyCommand;\n}($Command);\n\nexport { DeleteBucketPolicyCommand };","map":null,"metadata":{},"sourceType":"module"}
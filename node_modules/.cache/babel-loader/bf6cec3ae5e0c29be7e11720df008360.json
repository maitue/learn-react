{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DetectDocumentTextRequest, DetectDocumentTextResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1DetectDocumentTextCommand, serializeAws_json1_1DetectDocumentTextCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Detects text in the input document. Amazon Textract can detect lines of text and the\n *          words that make up a line of text. The input document must be an image in JPEG or PNG\n *          format. <code>DetectDocumentText</code> returns the detected text in an array of <a>Block</a> objects. </p>\n *          <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object\n *          is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is\n *          a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p>\n *\n *          <p>\n *             <code>DetectDocumentText</code> is a synchronous operation. To analyze documents\n *          asynchronously, use <a>StartDocumentTextDetection</a>.</p>\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>\n */\n\nvar DetectDocumentTextCommand =\n/** @class */\nfunction (_super) {\n  __extends(DetectDocumentTextCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DetectDocumentTextCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DetectDocumentTextCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"TextractClient\";\n    var commandName = \"DetectDocumentTextCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DetectDocumentTextRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DetectDocumentTextResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DetectDocumentTextCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DetectDocumentTextCommand(input, context);\n  };\n\n  DetectDocumentTextCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DetectDocumentTextCommand(output, context);\n  };\n\n  return DetectDocumentTextCommand;\n}($Command);\n\nexport { DetectDocumentTextCommand };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { S3Client } from \"./S3Client\";\nimport { AbortMultipartUploadCommand } from \"./commands/AbortMultipartUploadCommand\";\nimport { CompleteMultipartUploadCommand } from \"./commands/CompleteMultipartUploadCommand\";\nimport { CopyObjectCommand } from \"./commands/CopyObjectCommand\";\nimport { CreateBucketCommand } from \"./commands/CreateBucketCommand\";\nimport { CreateMultipartUploadCommand } from \"./commands/CreateMultipartUploadCommand\";\nimport { DeleteBucketAnalyticsConfigurationCommand } from \"./commands/DeleteBucketAnalyticsConfigurationCommand\";\nimport { DeleteBucketCommand } from \"./commands/DeleteBucketCommand\";\nimport { DeleteBucketCorsCommand } from \"./commands/DeleteBucketCorsCommand\";\nimport { DeleteBucketEncryptionCommand } from \"./commands/DeleteBucketEncryptionCommand\";\nimport { DeleteBucketIntelligentTieringConfigurationCommand } from \"./commands/DeleteBucketIntelligentTieringConfigurationCommand\";\nimport { DeleteBucketInventoryConfigurationCommand } from \"./commands/DeleteBucketInventoryConfigurationCommand\";\nimport { DeleteBucketLifecycleCommand } from \"./commands/DeleteBucketLifecycleCommand\";\nimport { DeleteBucketMetricsConfigurationCommand } from \"./commands/DeleteBucketMetricsConfigurationCommand\";\nimport { DeleteBucketOwnershipControlsCommand } from \"./commands/DeleteBucketOwnershipControlsCommand\";\nimport { DeleteBucketPolicyCommand } from \"./commands/DeleteBucketPolicyCommand\";\nimport { DeleteBucketReplicationCommand } from \"./commands/DeleteBucketReplicationCommand\";\nimport { DeleteBucketTaggingCommand } from \"./commands/DeleteBucketTaggingCommand\";\nimport { DeleteBucketWebsiteCommand } from \"./commands/DeleteBucketWebsiteCommand\";\nimport { DeleteObjectCommand } from \"./commands/DeleteObjectCommand\";\nimport { DeleteObjectTaggingCommand } from \"./commands/DeleteObjectTaggingCommand\";\nimport { DeleteObjectsCommand } from \"./commands/DeleteObjectsCommand\";\nimport { DeletePublicAccessBlockCommand } from \"./commands/DeletePublicAccessBlockCommand\";\nimport { GetBucketAccelerateConfigurationCommand } from \"./commands/GetBucketAccelerateConfigurationCommand\";\nimport { GetBucketAclCommand } from \"./commands/GetBucketAclCommand\";\nimport { GetBucketAnalyticsConfigurationCommand } from \"./commands/GetBucketAnalyticsConfigurationCommand\";\nimport { GetBucketCorsCommand } from \"./commands/GetBucketCorsCommand\";\nimport { GetBucketEncryptionCommand } from \"./commands/GetBucketEncryptionCommand\";\nimport { GetBucketIntelligentTieringConfigurationCommand } from \"./commands/GetBucketIntelligentTieringConfigurationCommand\";\nimport { GetBucketInventoryConfigurationCommand } from \"./commands/GetBucketInventoryConfigurationCommand\";\nimport { GetBucketLifecycleConfigurationCommand } from \"./commands/GetBucketLifecycleConfigurationCommand\";\nimport { GetBucketLocationCommand } from \"./commands/GetBucketLocationCommand\";\nimport { GetBucketLoggingCommand } from \"./commands/GetBucketLoggingCommand\";\nimport { GetBucketMetricsConfigurationCommand } from \"./commands/GetBucketMetricsConfigurationCommand\";\nimport { GetBucketNotificationConfigurationCommand } from \"./commands/GetBucketNotificationConfigurationCommand\";\nimport { GetBucketOwnershipControlsCommand } from \"./commands/GetBucketOwnershipControlsCommand\";\nimport { GetBucketPolicyCommand } from \"./commands/GetBucketPolicyCommand\";\nimport { GetBucketPolicyStatusCommand } from \"./commands/GetBucketPolicyStatusCommand\";\nimport { GetBucketReplicationCommand } from \"./commands/GetBucketReplicationCommand\";\nimport { GetBucketRequestPaymentCommand } from \"./commands/GetBucketRequestPaymentCommand\";\nimport { GetBucketTaggingCommand } from \"./commands/GetBucketTaggingCommand\";\nimport { GetBucketVersioningCommand } from \"./commands/GetBucketVersioningCommand\";\nimport { GetBucketWebsiteCommand } from \"./commands/GetBucketWebsiteCommand\";\nimport { GetObjectAclCommand } from \"./commands/GetObjectAclCommand\";\nimport { GetObjectCommand } from \"./commands/GetObjectCommand\";\nimport { GetObjectLegalHoldCommand } from \"./commands/GetObjectLegalHoldCommand\";\nimport { GetObjectLockConfigurationCommand } from \"./commands/GetObjectLockConfigurationCommand\";\nimport { GetObjectRetentionCommand } from \"./commands/GetObjectRetentionCommand\";\nimport { GetObjectTaggingCommand } from \"./commands/GetObjectTaggingCommand\";\nimport { GetObjectTorrentCommand } from \"./commands/GetObjectTorrentCommand\";\nimport { GetPublicAccessBlockCommand } from \"./commands/GetPublicAccessBlockCommand\";\nimport { HeadBucketCommand } from \"./commands/HeadBucketCommand\";\nimport { HeadObjectCommand } from \"./commands/HeadObjectCommand\";\nimport { ListBucketAnalyticsConfigurationsCommand } from \"./commands/ListBucketAnalyticsConfigurationsCommand\";\nimport { ListBucketIntelligentTieringConfigurationsCommand } from \"./commands/ListBucketIntelligentTieringConfigurationsCommand\";\nimport { ListBucketInventoryConfigurationsCommand } from \"./commands/ListBucketInventoryConfigurationsCommand\";\nimport { ListBucketMetricsConfigurationsCommand } from \"./commands/ListBucketMetricsConfigurationsCommand\";\nimport { ListBucketsCommand } from \"./commands/ListBucketsCommand\";\nimport { ListMultipartUploadsCommand } from \"./commands/ListMultipartUploadsCommand\";\nimport { ListObjectVersionsCommand } from \"./commands/ListObjectVersionsCommand\";\nimport { ListObjectsCommand } from \"./commands/ListObjectsCommand\";\nimport { ListObjectsV2Command } from \"./commands/ListObjectsV2Command\";\nimport { ListPartsCommand } from \"./commands/ListPartsCommand\";\nimport { PutBucketAccelerateConfigurationCommand } from \"./commands/PutBucketAccelerateConfigurationCommand\";\nimport { PutBucketAclCommand } from \"./commands/PutBucketAclCommand\";\nimport { PutBucketAnalyticsConfigurationCommand } from \"./commands/PutBucketAnalyticsConfigurationCommand\";\nimport { PutBucketCorsCommand } from \"./commands/PutBucketCorsCommand\";\nimport { PutBucketEncryptionCommand } from \"./commands/PutBucketEncryptionCommand\";\nimport { PutBucketIntelligentTieringConfigurationCommand } from \"./commands/PutBucketIntelligentTieringConfigurationCommand\";\nimport { PutBucketInventoryConfigurationCommand } from \"./commands/PutBucketInventoryConfigurationCommand\";\nimport { PutBucketLifecycleConfigurationCommand } from \"./commands/PutBucketLifecycleConfigurationCommand\";\nimport { PutBucketLoggingCommand } from \"./commands/PutBucketLoggingCommand\";\nimport { PutBucketMetricsConfigurationCommand } from \"./commands/PutBucketMetricsConfigurationCommand\";\nimport { PutBucketNotificationConfigurationCommand } from \"./commands/PutBucketNotificationConfigurationCommand\";\nimport { PutBucketOwnershipControlsCommand } from \"./commands/PutBucketOwnershipControlsCommand\";\nimport { PutBucketPolicyCommand } from \"./commands/PutBucketPolicyCommand\";\nimport { PutBucketReplicationCommand } from \"./commands/PutBucketReplicationCommand\";\nimport { PutBucketRequestPaymentCommand } from \"./commands/PutBucketRequestPaymentCommand\";\nimport { PutBucketTaggingCommand } from \"./commands/PutBucketTaggingCommand\";\nimport { PutBucketVersioningCommand } from \"./commands/PutBucketVersioningCommand\";\nimport { PutBucketWebsiteCommand } from \"./commands/PutBucketWebsiteCommand\";\nimport { PutObjectAclCommand } from \"./commands/PutObjectAclCommand\";\nimport { PutObjectCommand } from \"./commands/PutObjectCommand\";\nimport { PutObjectLegalHoldCommand } from \"./commands/PutObjectLegalHoldCommand\";\nimport { PutObjectLockConfigurationCommand } from \"./commands/PutObjectLockConfigurationCommand\";\nimport { PutObjectRetentionCommand } from \"./commands/PutObjectRetentionCommand\";\nimport { PutObjectTaggingCommand } from \"./commands/PutObjectTaggingCommand\";\nimport { PutPublicAccessBlockCommand } from \"./commands/PutPublicAccessBlockCommand\";\nimport { RestoreObjectCommand } from \"./commands/RestoreObjectCommand\";\nimport { SelectObjectContentCommand } from \"./commands/SelectObjectContentCommand\";\nimport { UploadPartCommand } from \"./commands/UploadPartCommand\";\nimport { UploadPartCopyCommand } from \"./commands/UploadPartCopyCommand\";\n/**\n * <p></p>\n */\n\nvar S3 =\n/** @class */\nfunction (_super) {\n  __extends(S3, _super);\n\n  function S3() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  S3.prototype.abortMultipartUpload = function (args, optionsOrCb, cb) {\n    var command = new AbortMultipartUploadCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.completeMultipartUpload = function (args, optionsOrCb, cb) {\n    var command = new CompleteMultipartUploadCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.copyObject = function (args, optionsOrCb, cb) {\n    var command = new CopyObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.createBucket = function (args, optionsOrCb, cb) {\n    var command = new CreateBucketCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.createMultipartUpload = function (args, optionsOrCb, cb) {\n    var command = new CreateMultipartUploadCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucket = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketAnalyticsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketAnalyticsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketCors = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketCorsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketEncryption = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketEncryptionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketIntelligentTieringConfiguration = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketIntelligentTieringConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketInventoryConfiguration = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketInventoryConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketLifecycle = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketLifecycleCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketMetricsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketMetricsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketOwnershipControls = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketOwnershipControlsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketPolicy = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketPolicyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketReplication = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketReplicationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketTagging = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteBucketWebsite = function (args, optionsOrCb, cb) {\n    var command = new DeleteBucketWebsiteCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteObject = function (args, optionsOrCb, cb) {\n    var command = new DeleteObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteObjects = function (args, optionsOrCb, cb) {\n    var command = new DeleteObjectsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deleteObjectTagging = function (args, optionsOrCb, cb) {\n    var command = new DeleteObjectTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.deletePublicAccessBlock = function (args, optionsOrCb, cb) {\n    var command = new DeletePublicAccessBlockCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketAccelerateConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketAccelerateConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketAcl = function (args, optionsOrCb, cb) {\n    var command = new GetBucketAclCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketAnalyticsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketAnalyticsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketCors = function (args, optionsOrCb, cb) {\n    var command = new GetBucketCorsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketEncryption = function (args, optionsOrCb, cb) {\n    var command = new GetBucketEncryptionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketIntelligentTieringConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketIntelligentTieringConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketInventoryConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketInventoryConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketLifecycleConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketLifecycleConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketLocation = function (args, optionsOrCb, cb) {\n    var command = new GetBucketLocationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketLogging = function (args, optionsOrCb, cb) {\n    var command = new GetBucketLoggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketMetricsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketMetricsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketNotificationConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetBucketNotificationConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketOwnershipControls = function (args, optionsOrCb, cb) {\n    var command = new GetBucketOwnershipControlsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketPolicy = function (args, optionsOrCb, cb) {\n    var command = new GetBucketPolicyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketPolicyStatus = function (args, optionsOrCb, cb) {\n    var command = new GetBucketPolicyStatusCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketReplication = function (args, optionsOrCb, cb) {\n    var command = new GetBucketReplicationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketRequestPayment = function (args, optionsOrCb, cb) {\n    var command = new GetBucketRequestPaymentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketTagging = function (args, optionsOrCb, cb) {\n    var command = new GetBucketTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketVersioning = function (args, optionsOrCb, cb) {\n    var command = new GetBucketVersioningCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getBucketWebsite = function (args, optionsOrCb, cb) {\n    var command = new GetBucketWebsiteCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObject = function (args, optionsOrCb, cb) {\n    var command = new GetObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectAcl = function (args, optionsOrCb, cb) {\n    var command = new GetObjectAclCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectLegalHold = function (args, optionsOrCb, cb) {\n    var command = new GetObjectLegalHoldCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectLockConfiguration = function (args, optionsOrCb, cb) {\n    var command = new GetObjectLockConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectRetention = function (args, optionsOrCb, cb) {\n    var command = new GetObjectRetentionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectTagging = function (args, optionsOrCb, cb) {\n    var command = new GetObjectTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getObjectTorrent = function (args, optionsOrCb, cb) {\n    var command = new GetObjectTorrentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.getPublicAccessBlock = function (args, optionsOrCb, cb) {\n    var command = new GetPublicAccessBlockCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.headBucket = function (args, optionsOrCb, cb) {\n    var command = new HeadBucketCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.headObject = function (args, optionsOrCb, cb) {\n    var command = new HeadObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listBucketAnalyticsConfigurations = function (args, optionsOrCb, cb) {\n    var command = new ListBucketAnalyticsConfigurationsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listBucketIntelligentTieringConfigurations = function (args, optionsOrCb, cb) {\n    var command = new ListBucketIntelligentTieringConfigurationsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listBucketInventoryConfigurations = function (args, optionsOrCb, cb) {\n    var command = new ListBucketInventoryConfigurationsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listBucketMetricsConfigurations = function (args, optionsOrCb, cb) {\n    var command = new ListBucketMetricsConfigurationsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listBuckets = function (args, optionsOrCb, cb) {\n    var command = new ListBucketsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listMultipartUploads = function (args, optionsOrCb, cb) {\n    var command = new ListMultipartUploadsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listObjects = function (args, optionsOrCb, cb) {\n    var command = new ListObjectsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listObjectsV2 = function (args, optionsOrCb, cb) {\n    var command = new ListObjectsV2Command(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listObjectVersions = function (args, optionsOrCb, cb) {\n    var command = new ListObjectVersionsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.listParts = function (args, optionsOrCb, cb) {\n    var command = new ListPartsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketAccelerateConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketAccelerateConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketAcl = function (args, optionsOrCb, cb) {\n    var command = new PutBucketAclCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketAnalyticsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketAnalyticsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketCors = function (args, optionsOrCb, cb) {\n    var command = new PutBucketCorsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketEncryption = function (args, optionsOrCb, cb) {\n    var command = new PutBucketEncryptionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketIntelligentTieringConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketIntelligentTieringConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketInventoryConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketInventoryConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketLifecycleConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketLifecycleConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketLogging = function (args, optionsOrCb, cb) {\n    var command = new PutBucketLoggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketMetricsConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketMetricsConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketNotificationConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutBucketNotificationConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketOwnershipControls = function (args, optionsOrCb, cb) {\n    var command = new PutBucketOwnershipControlsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketPolicy = function (args, optionsOrCb, cb) {\n    var command = new PutBucketPolicyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketReplication = function (args, optionsOrCb, cb) {\n    var command = new PutBucketReplicationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketRequestPayment = function (args, optionsOrCb, cb) {\n    var command = new PutBucketRequestPaymentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketTagging = function (args, optionsOrCb, cb) {\n    var command = new PutBucketTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketVersioning = function (args, optionsOrCb, cb) {\n    var command = new PutBucketVersioningCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putBucketWebsite = function (args, optionsOrCb, cb) {\n    var command = new PutBucketWebsiteCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObject = function (args, optionsOrCb, cb) {\n    var command = new PutObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObjectAcl = function (args, optionsOrCb, cb) {\n    var command = new PutObjectAclCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObjectLegalHold = function (args, optionsOrCb, cb) {\n    var command = new PutObjectLegalHoldCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObjectLockConfiguration = function (args, optionsOrCb, cb) {\n    var command = new PutObjectLockConfigurationCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObjectRetention = function (args, optionsOrCb, cb) {\n    var command = new PutObjectRetentionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putObjectTagging = function (args, optionsOrCb, cb) {\n    var command = new PutObjectTaggingCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.putPublicAccessBlock = function (args, optionsOrCb, cb) {\n    var command = new PutPublicAccessBlockCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.restoreObject = function (args, optionsOrCb, cb) {\n    var command = new RestoreObjectCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.selectObjectContent = function (args, optionsOrCb, cb) {\n    var command = new SelectObjectContentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.uploadPart = function (args, optionsOrCb, cb) {\n    var command = new UploadPartCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  S3.prototype.uploadPartCopy = function (args, optionsOrCb, cb) {\n    var command = new UploadPartCopyCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return S3;\n}(S3Client);\n\nexport { S3 };","map":null,"metadata":{},"sourceType":"module"}
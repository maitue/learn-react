{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var memoize = function memoize(provider, isExpired, requiresRefresh) {\n  var result;\n  var hasResult;\n\n  if (isExpired === undefined) {\n    // This is a static memoization; no need to incorporate refreshing\n    return function () {\n      if (!hasResult) {\n        result = provider();\n        hasResult = true;\n      }\n\n      return result;\n    };\n  }\n\n  var isConstant = false;\n  return function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var resolved;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!hasResult) {\n              result = provider();\n              hasResult = true;\n            }\n\n            if (isConstant) {\n              return [2\n              /*return*/\n              , result];\n            }\n\n            return [4\n            /*yield*/\n            , result];\n\n          case 1:\n            resolved = _a.sent();\n\n            if (requiresRefresh && !requiresRefresh(resolved)) {\n              isConstant = true;\n              return [2\n              /*return*/\n              , resolved];\n            }\n\n            if (isExpired(resolved)) {\n              return [2\n              /*return*/\n              , result = provider()];\n            }\n\n            return [2\n            /*return*/\n            , resolved];\n        }\n      });\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar MIME_MAP = [{\n  type: 'text/plain',\n  ext: 'txt'\n}, {\n  type: 'text/html',\n  ext: 'html'\n}, {\n  type: 'text/javascript',\n  ext: 'js'\n}, {\n  type: 'text/css',\n  ext: 'css'\n}, {\n  type: 'text/csv',\n  ext: 'csv'\n}, {\n  type: 'text/yaml',\n  ext: 'yml'\n}, {\n  type: 'text/yaml',\n  ext: 'yaml'\n}, {\n  type: 'text/calendar',\n  ext: 'ics'\n}, {\n  type: 'text/calendar',\n  ext: 'ical'\n}, {\n  type: 'image/apng',\n  ext: 'apng'\n}, {\n  type: 'image/bmp',\n  ext: 'bmp'\n}, {\n  type: 'image/gif',\n  ext: 'gif'\n}, {\n  type: 'image/x-icon',\n  ext: 'ico'\n}, {\n  type: 'image/x-icon',\n  ext: 'cur'\n}, {\n  type: 'image/jpeg',\n  ext: 'jpg'\n}, {\n  type: 'image/jpeg',\n  ext: 'jpeg'\n}, {\n  type: 'image/jpeg',\n  ext: 'jfif'\n}, {\n  type: 'image/jpeg',\n  ext: 'pjp'\n}, {\n  type: 'image/jpeg',\n  ext: 'pjpeg'\n}, {\n  type: 'image/png',\n  ext: 'png'\n}, {\n  type: 'image/svg+xml',\n  ext: 'svg'\n}, {\n  type: 'image/tiff',\n  ext: 'tif'\n}, {\n  type: 'image/tiff',\n  ext: 'tiff'\n}, {\n  type: 'image/webp',\n  ext: 'webp'\n}, {\n  type: 'application/json',\n  ext: 'json'\n}, {\n  type: 'application/xml',\n  ext: 'xml'\n}, {\n  type: 'application/x-sh',\n  ext: 'sh'\n}, {\n  type: 'application/zip',\n  ext: 'zip'\n}, {\n  type: 'application/x-rar-compressed',\n  ext: 'rar'\n}, {\n  type: 'application/x-tar',\n  ext: 'tar'\n}, {\n  type: 'application/x-bzip',\n  ext: 'bz'\n}, {\n  type: 'application/x-bzip2',\n  ext: 'bz2'\n}, {\n  type: 'application/pdf',\n  ext: 'pdf'\n}, {\n  type: 'application/java-archive',\n  ext: 'jar'\n}, {\n  type: 'application/msword',\n  ext: 'doc'\n}, {\n  type: 'application/vnd.ms-excel',\n  ext: 'xls'\n}, {\n  type: 'application/vnd.ms-excel',\n  ext: 'xlsx'\n}, {\n  type: 'message/rfc822',\n  ext: 'eml'\n}];\nexport var isEmpty = function isEmpty(obj) {\n  if (obj === void 0) {\n    obj = {};\n  }\n\n  return Object.keys(obj).length === 0;\n};\nexport var sortByField = function sortByField(list, field, dir) {\n  if (!list || !list.sort) {\n    return false;\n  }\n\n  var dirX = dir && dir === 'desc' ? -1 : 1;\n  list.sort(function (a, b) {\n    var a_val = a[field];\n    var b_val = b[field];\n\n    if (typeof b_val === 'undefined') {\n      return typeof a_val === 'undefined' ? 0 : 1 * dirX;\n    }\n\n    if (typeof a_val === 'undefined') {\n      return -1 * dirX;\n    }\n\n    if (a_val < b_val) {\n      return -1 * dirX;\n    }\n\n    if (a_val > b_val) {\n      return 1 * dirX;\n    }\n\n    return 0;\n  });\n  return true;\n};\nexport var objectLessAttributes = function objectLessAttributes(obj, less) {\n  var ret = Object.assign({}, obj);\n\n  if (less) {\n    if (typeof less === 'string') {\n      delete ret[less];\n    } else {\n      less.forEach(function (attr) {\n        delete ret[attr];\n      });\n    }\n  }\n\n  return ret;\n};\nexport var filenameToContentType = function filenameToContentType(filename, defVal) {\n  if (defVal === void 0) {\n    defVal = 'application/octet-stream';\n  }\n\n  var name = filename.toLowerCase();\n  var filtered = MIME_MAP.filter(function (mime) {\n    return name.endsWith('.' + mime.ext);\n  });\n  return filtered.length > 0 ? filtered[0].type : defVal;\n};\nexport var isTextFile = function isTextFile(contentType) {\n  var type = contentType.toLowerCase();\n\n  if (type.startsWith('text/')) {\n    return true;\n  }\n\n  return 'application/json' === type || 'application/xml' === type || 'application/sh' === type;\n};\nexport var generateRandomString = function generateRandomString() {\n  var result = '';\n  var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  for (var i = 32; i > 0; i -= 1) {\n    result += chars[Math.floor(Math.random() * chars.length)];\n  }\n\n  return result;\n};\nexport var makeQuerablePromise = function makeQuerablePromise(promise) {\n  if (promise.isResolved) return promise;\n  var isPending = true;\n  var isRejected = false;\n  var isFullfilled = false;\n  var result = promise.then(function (data) {\n    isFullfilled = true;\n    isPending = false;\n    return data;\n  }, function (e) {\n    isRejected = true;\n    isPending = false;\n    throw e;\n  });\n\n  result.isFullfilled = function () {\n    return isFullfilled;\n  };\n\n  result.isPending = function () {\n    return isPending;\n  };\n\n  result.isRejected = function () {\n    return isRejected;\n  };\n\n  return result;\n};\nexport var isWebWorker = function isWebWorker() {\n  if (typeof self === 'undefined') {\n    return false;\n  }\n\n  var selfContext = self;\n  return typeof selfContext.WorkerGlobalScope !== 'undefined' && self instanceof selfContext.WorkerGlobalScope;\n};\nexport var browserOrNode = function browserOrNode() {\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n  return {\n    isBrowser: isBrowser,\n    isNode: isNode\n  };\n};\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\n\nexport var transferKeyToLowerCase = function transferKeyToLowerCase(obj, whiteListForItself, whiteListForChildren) {\n  if (whiteListForItself === void 0) {\n    whiteListForItself = [];\n  }\n\n  if (whiteListForChildren === void 0) {\n    whiteListForChildren = [];\n  }\n\n  if (!isStrictObject(obj)) return obj;\n  var ret = {};\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var transferedKey = whiteListForItself.includes(key) ? key : key[0].toLowerCase() + key.slice(1);\n      ret[transferedKey] = whiteListForChildren.includes(key) ? obj[key] : transferKeyToLowerCase(obj[key], whiteListForItself, whiteListForChildren);\n    }\n  }\n\n  return ret;\n};\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\n\nexport var transferKeyToUpperCase = function transferKeyToUpperCase(obj, whiteListForItself, whiteListForChildren) {\n  if (whiteListForItself === void 0) {\n    whiteListForItself = [];\n  }\n\n  if (whiteListForChildren === void 0) {\n    whiteListForChildren = [];\n  }\n\n  if (!isStrictObject(obj)) return obj;\n  var ret = {};\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var transferredKey = whiteListForItself.includes(key) ? key : key[0].toUpperCase() + key.slice(1);\n      ret[transferredKey] = whiteListForChildren.includes(key) ? obj[key] : transferKeyToUpperCase(obj[key], whiteListForItself, whiteListForChildren);\n    }\n  }\n\n  return ret;\n};\n/**\n * Return true if the object is a strict object\n * which means it's not Array, Function, Number, String, Boolean or Null\n * @param obj the Object\n */\n\nexport var isStrictObject = function isStrictObject(obj) {\n  return obj instanceof Object && !(obj instanceof Array) && !(obj instanceof Function) && !(obj instanceof Number) && !(obj instanceof String) && !(obj instanceof Boolean);\n};\n/**\n * @deprecated use per-function imports\n */\n\nvar JS =\n/** @class */\nfunction () {\n  function JS() {}\n\n  JS.isEmpty = isEmpty;\n  JS.sortByField = sortByField;\n  JS.objectLessAttributes = objectLessAttributes;\n  JS.filenameToContentType = filenameToContentType;\n  JS.isTextFile = isTextFile;\n  JS.generateRandomString = generateRandomString;\n  JS.makeQuerablePromise = makeQuerablePromise;\n  JS.isWebWorker = isWebWorker;\n  JS.browserOrNode = browserOrNode;\n  JS.transferKeyToLowerCase = transferKeyToLowerCase;\n  JS.transferKeyToUpperCase = transferKeyToUpperCase;\n  JS.isStrictObject = isStrictObject;\n  return JS;\n}();\n\nexport { JS };\n/**\n * @deprecated use per-function imports\n */\n\nexport default JS;","map":null,"metadata":{},"sourceType":"module"}
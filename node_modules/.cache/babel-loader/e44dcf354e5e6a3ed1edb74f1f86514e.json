{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\LaylaUserGuide\\\\src\\\\index.js\";\n\n/**\n * Create React App entry point. This and `public/index.html` files can not be\n * changed or moved.\n */\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store, { persistor } from \"./app/store/store\";\nimport App from \"./App\";\nimport \"./index.scss\"; // Standard version\n// import \"./sass/style.react.rtl.css\"; // RTL version\n\nimport \"socicon/css/socicon.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\nimport \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\nimport \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\n/**\n * Base URL of the website.\n *\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n */\n\nvar PUBLIC_URL = process.env.PUBLIC_URL;\nvar BUILD_DATE_ENV = process.env.BUILD_DATE_ENV;\nconsole.log(\"Build date: \" + BUILD_DATE_ENV);\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n// /* const mock = */ mockAxios(axios);\n\n/**\n * Inject metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n// setupAxios(axios, store);\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  store: store,\n  persistor: persistor,\n  basename: PUBLIC_URL,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","store","persistor","App","PUBLIC_URL","process","env","BUILD_DATE_ENV","console","log","render","document","getElementById"],"sources":["C:/laragon/www/LaylaUserGuide/src/index.js"],"sourcesContent":["/**\n * Create React App entry point. This and `public/index.html` files can not be\n * changed or moved.\n */\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store, { persistor } from \"./app/store/store\";\nimport App from \"./App\";\nimport \"./index.scss\"; // Standard version\n// import \"./sass/style.react.rtl.css\"; // RTL version\nimport \"socicon/css/socicon.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\nimport \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\nimport \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\n\n/**\n * Base URL of the website.\n *\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n */\nconst { PUBLIC_URL } = process.env;\nconst { BUILD_DATE_ENV } = process.env;\nconsole.log(\"Build date: \" + BUILD_DATE_ENV);\n\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n// /* const mock = */ mockAxios(axios);\n\n/**\n * Inject metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n// setupAxios(axios, store);\n\nReactDOM.render(\n  <App store={store} persistor={persistor} basename={PUBLIC_URL} />,\n  document.getElementById(\"root\"),\n);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,mBAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP,C,CAAuB;AACvB;;AACA,OAAO,yBAAP;AACA,OAAO,+CAAP;AACA,OAAO,+DAAP;AACA,OAAO,mDAAP;AACA,OAAO,oDAAP;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAQC,UAAR,GAAuBC,OAAO,CAACC,GAA/B,CAAQF,UAAR;AACA,IAAQG,cAAR,GAA2BF,OAAO,CAACC,GAAnC,CAAQC,cAAR;AACAC,OAAO,CAACC,GAAR,CAAY,iBAAiBF,cAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAP,QAAQ,CAACU,MAAT,eACE,oBAAC,GAAD;EAAK,KAAK,EAAET,KAAZ;EAAmB,SAAS,EAAEC,SAA9B;EAAyC,QAAQ,EAAEE,UAAnD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF,EAEEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF"},"metadata":{},"sourceType":"module"}
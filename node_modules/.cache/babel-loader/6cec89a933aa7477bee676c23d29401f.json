{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PollyClient } from \"./PollyClient\";\nimport { DeleteLexiconCommand } from \"./commands/DeleteLexiconCommand\";\nimport { DescribeVoicesCommand } from \"./commands/DescribeVoicesCommand\";\nimport { GetLexiconCommand } from \"./commands/GetLexiconCommand\";\nimport { GetSpeechSynthesisTaskCommand } from \"./commands/GetSpeechSynthesisTaskCommand\";\nimport { ListLexiconsCommand } from \"./commands/ListLexiconsCommand\";\nimport { ListSpeechSynthesisTasksCommand } from \"./commands/ListSpeechSynthesisTasksCommand\";\nimport { PutLexiconCommand } from \"./commands/PutLexiconCommand\";\nimport { StartSpeechSynthesisTaskCommand } from \"./commands/StartSpeechSynthesisTaskCommand\";\nimport { SynthesizeSpeechCommand } from \"./commands/SynthesizeSpeechCommand\";\n/**\n * <p>Amazon Polly is a web service that makes it easy to synthesize speech from\n *       text.</p>\n *          <p>The Amazon Polly service provides API operations for synthesizing high-quality speech\n *       from plain text and Speech Synthesis Markup Language (SSML), along with managing\n *       pronunciations lexicons that enable you to get the best results for your application\n *       domain.</p>\n */\n\nvar Polly =\n/** @class */\nfunction (_super) {\n  __extends(Polly, _super);\n\n  function Polly() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Polly.prototype.deleteLexicon = function (args, optionsOrCb, cb) {\n    var command = new DeleteLexiconCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.describeVoices = function (args, optionsOrCb, cb) {\n    var command = new DescribeVoicesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.getLexicon = function (args, optionsOrCb, cb) {\n    var command = new GetLexiconCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.getSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n    var command = new GetSpeechSynthesisTaskCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.listLexicons = function (args, optionsOrCb, cb) {\n    var command = new ListLexiconsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.listSpeechSynthesisTasks = function (args, optionsOrCb, cb) {\n    var command = new ListSpeechSynthesisTasksCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.putLexicon = function (args, optionsOrCb, cb) {\n    var command = new PutLexiconCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.startSpeechSynthesisTask = function (args, optionsOrCb, cb) {\n    var command = new StartSpeechSynthesisTaskCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Polly.prototype.synthesizeSpeech = function (args, optionsOrCb, cb) {\n    var command = new SynthesizeSpeechCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return Polly;\n}(PollyClient);\n\nexport { Polly };","map":null,"metadata":{},"sourceType":"module"}
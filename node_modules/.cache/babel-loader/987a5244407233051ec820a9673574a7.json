{"ast":null,"code":"'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Safari < 13 does not throw an error in this case\n\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', {\n      writable: false\n    }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  }\n\n  return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};","map":null,"metadata":{},"sourceType":"script"}